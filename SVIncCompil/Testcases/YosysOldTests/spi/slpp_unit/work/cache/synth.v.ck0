module spi_clgen(clk_in, rst, go, enable, last_clk, divider, clk_out, pos_edge, neg_edge);
  wire _000_;
  wire [15:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  input clk_in;
  output clk_out;
  reg clk_out;
  reg [15:0] cnt;
  input [15:0] divider;
  input enable;
  input go;
  input last_clk;
  output neg_edge;
  reg neg_edge;
  output pos_edge;
  reg pos_edge;
  input rst;
  assign _071_ = ~divider[13];
  assign _072_ = ~divider[14];
  assign _073_ = _072_ & _071_;
  assign _074_ = ~divider[15];
  assign _075_ = ~divider[1];
  assign _076_ = _075_ & _074_;
  assign _077_ = _076_ & _073_;
  assign _078_ = ~divider[0];
  assign _079_ = ~divider[10];
  assign _080_ = _079_ & _078_;
  assign _081_ = ~divider[11];
  assign _082_ = ~divider[12];
  assign _083_ = _082_ & _081_;
  assign _084_ = _083_ & _080_;
  assign _085_ = _084_ & _077_;
  assign _086_ = ~divider[6];
  assign _087_ = ~divider[7];
  assign _088_ = _087_ & _086_;
  assign _089_ = ~divider[8];
  assign _090_ = ~divider[9];
  assign _091_ = _090_ & _089_;
  assign _092_ = _091_ & _088_;
  assign _093_ = ~divider[2];
  assign _094_ = ~divider[3];
  assign _095_ = _094_ & _093_;
  assign _096_ = ~divider[4];
  assign _097_ = ~divider[5];
  assign _098_ = _097_ & _096_;
  assign _099_ = _098_ & _095_;
  assign _100_ = _099_ & _092_;
  assign _101_ = _100_ & _085_;
  assign _102_ = ~enable;
  assign _103_ = go & _102_;
  assign _104_ = _103_ & _101_;
  assign _105_ = ~cnt[12];
  assign _106_ = ~cnt[13];
  assign _107_ = _106_ & _105_;
  assign _108_ = ~cnt[14];
  assign _109_ = ~cnt[15];
  assign _110_ = _109_ & _108_;
  assign _111_ = _110_ & _107_;
  assign _112_ = ~cnt[1];
  assign _113_ = _112_ & cnt[0];
  assign _114_ = ~cnt[10];
  assign _115_ = ~cnt[11];
  assign _004_ = _115_ & _114_;
  assign _005_ = _004_ & _113_;
  assign _006_ = _005_ & _111_;
  assign _007_ = ~cnt[6];
  assign _008_ = ~cnt[7];
  assign _009_ = _008_ & _007_;
  assign _010_ = ~cnt[8];
  assign _011_ = ~cnt[9];
  assign _012_ = _011_ & _010_;
  assign _013_ = _012_ & _009_;
  assign _014_ = ~cnt[2];
  assign _015_ = ~cnt[3];
  assign _016_ = _015_ & _014_;
  assign _017_ = ~cnt[4];
  assign _018_ = ~cnt[5];
  assign _019_ = _018_ & _017_;
  assign _020_ = _019_ & _016_;
  assign _021_ = _020_ & _013_;
  assign _022_ = _021_ & _006_;
  assign _023_ = ~clk_out;
  assign _024_ = _023_ & enable;
  assign _025_ = _024_ & _022_;
  assign _026_ = _101_ & clk_out;
  assign _027_ = _026_ | _025_;
  assign _003_ = _027_ | _104_;
  assign _028_ = clk_out & enable;
  assign _029_ = _028_ & _022_;
  assign _030_ = _024_ & _101_;
  assign _002_ = _030_ | _029_;
  assign _031_ = ~cnt[0];
  assign _032_ = _112_ & _031_;
  assign _033_ = _032_ & _004_;
  assign _034_ = _033_ & _111_;
  assign _035_ = _034_ & _021_;
  assign _036_ = ~_035_;
  assign _037_ = _036_ & enable;
  assign _001_[0] = _037_ ? _031_ : divider[0];
  assign _038_ = ~_037_;
  assign _039_ = cnt[1] | cnt[0];
  assign _040_ = _039_ | cnt[2];
  assign _041_ = _040_ | cnt[3];
  assign _042_ = _041_ | cnt[4];
  assign _043_ = _042_ | cnt[5];
  assign _044_ = _043_ | cnt[6];
  assign _045_ = _044_ | cnt[7];
  assign _046_ = _045_ | cnt[8];
  assign _047_ = _046_ | cnt[9];
  assign _048_ = _047_ ^ _114_;
  assign _001_[10] = _038_ ? divider[10] : _048_;
  assign _049_ = _047_ | cnt[10];
  assign _050_ = _049_ ^ _115_;
  assign _001_[11] = _038_ ? divider[11] : _050_;
  assign _051_ = _049_ | cnt[11];
  assign _052_ = _051_ ^ _105_;
  assign _001_[12] = _038_ ? divider[12] : _052_;
  assign _053_ = _051_ | cnt[12];
  assign _054_ = _053_ ^ _106_;
  assign _001_[13] = _038_ ? divider[13] : _054_;
  assign _055_ = _053_ | cnt[13];
  assign _056_ = _055_ ^ _108_;
  assign _001_[14] = _038_ ? divider[14] : _056_;
  assign _057_ = _055_ | cnt[14];
  assign _058_ = _057_ ^ _109_;
  assign _001_[15] = _038_ ? divider[15] : _058_;
  assign _059_ = cnt[1] ^ _031_;
  assign _001_[1] = _037_ ? _059_ : divider[1];
  assign _060_ = _039_ ^ _014_;
  assign _001_[2] = _037_ ? _060_ : divider[2];
  assign _061_ = _040_ ^ _015_;
  assign _001_[3] = _037_ ? _061_ : divider[3];
  assign _062_ = _041_ ^ _017_;
  assign _001_[4] = _037_ ? _062_ : divider[4];
  assign _063_ = _042_ ^ _018_;
  assign _001_[5] = _037_ ? _063_ : divider[5];
  assign _064_ = _043_ ^ _007_;
  assign _001_[6] = _037_ ? _064_ : divider[6];
  assign _065_ = _044_ ^ _008_;
  assign _001_[7] = _037_ ? _065_ : divider[7];
  assign _066_ = _045_ ^ _010_;
  assign _001_[8] = _038_ ? divider[8] : _066_;
  assign _067_ = _046_ ^ _011_;
  assign _001_[9] = _038_ ? divider[9] : _067_;
  assign _068_ = last_clk & _023_;
  assign _069_ = _068_ | _102_;
  assign _070_ = _069_ | _036_;
  assign _000_ = _070_ ^ _023_;
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[0] <= 1;
    else
      cnt[0] <= _001_[0];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[10] <= 1;
    else
      cnt[10] <= _001_[10];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[11] <= 1;
    else
      cnt[11] <= _001_[11];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[12] <= 1;
    else
      cnt[12] <= _001_[12];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[13] <= 1;
    else
      cnt[13] <= _001_[13];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[14] <= 1;
    else
      cnt[14] <= _001_[14];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[15] <= 1;
    else
      cnt[15] <= _001_[15];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[1] <= 1;
    else
      cnt[1] <= _001_[1];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[2] <= 1;
    else
      cnt[2] <= _001_[2];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[3] <= 1;
    else
      cnt[3] <= _001_[3];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[4] <= 1;
    else
      cnt[4] <= _001_[4];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[5] <= 1;
    else
      cnt[5] <= _001_[5];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[6] <= 1;
    else
      cnt[6] <= _001_[6];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[7] <= 1;
    else
      cnt[7] <= _001_[7];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[8] <= 1;
    else
      cnt[8] <= _001_[8];
  always @(posedge clk_in or posedge rst)
    if (rst)
      cnt[9] <= 1;
    else
      cnt[9] <= _001_[9];
  always @(posedge clk_in or posedge rst)
    if (rst)
      clk_out <= 0;
    else
      clk_out <= _000_;
  always @(posedge clk_in or posedge rst)
    if (rst)
      neg_edge <= 0;
    else
      neg_edge <= _002_;
  always @(posedge clk_in or posedge rst)
    if (rst)
      pos_edge <= 0;
    else
      pos_edge <= _003_;
endmodule