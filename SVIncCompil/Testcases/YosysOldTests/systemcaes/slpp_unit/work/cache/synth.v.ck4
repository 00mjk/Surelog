
module sbox(clk, reset, data_i, decrypt_i, data_o);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire [3:0] ah;
  wire [3:0] ah2;
  reg [3:0] ah_reg;
  reg [3:0] alph;
  input clk;
  input [7:0] data_i;
  output [7:0] data_o;
  input decrypt_i;
  wire first_mux_aB;
  wire [3:0] first_mux_ah_t;
  wire [7:0] first_mux_data_var;
  wire [3:0] intermediate_to_invert_var;
  reg [3:0] inversion_to_invert_var;
  wire [3:0] next_ah_reg;
  wire [3:0] next_alph;
  wire [3:0] next_to_invert;
  input reset;
  wire [3:0] square1_ah_t;
  wire [3:0] sum1_alph_t;
  wire [3:0] to_invert;
  assign _171_ = ~decrypt_i;
  assign _172_ = ~data_i[4];
  assign _173_ = ~data_i[1];
  assign _174_ = data_i[6] ^ data_i[3];
  assign _175_ = _174_ ^ _173_;
  assign _176_ = _171_ ? _172_ : _175_;
  assign _177_ = ~_176_;
  assign _178_ = ~data_i[6];
  assign _179_ = ~data_i[3];
  assign _180_ = data_i[0] ^ data_i[5];
  assign _181_ = _180_ ^ _179_;
  assign _182_ = _171_ ? _178_ : _181_;
  assign _183_ = _182_ ^ _177_;
  assign _184_ = ~data_i[5];
  assign _185_ = data_i[2] ^ data_i[7];
  assign _186_ = _185_ ^ _172_;
  assign _187_ = _171_ ? _184_ : _186_;
  assign _188_ = ~_187_;
  assign _189_ = _188_ ^ _183_;
  assign ah[0] = ~_189_;
  assign _190_ = ~_183_;
  assign _191_ = ~data_i[0];
  assign _192_ = _174_ ^ _191_;
  assign _193_ = _171_ ? _173_ : _192_;
  assign _194_ = ~_193_;
  assign _195_ = ~data_i[7];
  assign _196_ = data_i[4] ^ data_i[1];
  assign _197_ = _196_ ^ _178_;
  assign _198_ = _171_ ? _195_ : _197_;
  assign _199_ = _198_ ^ _194_;
  assign _200_ = _199_ ^ _190_;
  assign ah[1] = ~_200_;
  assign _201_ = _198_ ^ _188_;
  assign ah[3] = ~_201_;
  assign _202_ = ~data_i[2];
  assign _203_ = _196_ ^ data_i[7];
  assign _204_ = _171_ ? _202_ : _203_;
  assign _205_ = _204_ ^ ah[3];
  assign _206_ = _180_ ^ _202_;
  assign _207_ = _171_ ? _179_ : _206_;
  assign ah[2] = _207_ ^ _205_;
  assign _208_ = ~alph[0];
  assign _209_ = inversion_to_invert_var[1] & inversion_to_invert_var[2];
  assign _210_ = ~inversion_to_invert_var[3];
  assign _211_ = inversion_to_invert_var[1] ^ inversion_to_invert_var[2];
  assign _212_ = _211_ ^ _210_;
  assign _213_ = _209_ & inversion_to_invert_var[3];
  assign _214_ = _213_ ^ _212_;
  assign _215_ = _214_ ^ inversion_to_invert_var[0];
  assign _216_ = inversion_to_invert_var[0] & inversion_to_invert_var[2];
  assign _217_ = _216_ ^ _215_;
  assign _218_ = _217_ ^ _209_;
  assign _219_ = inversion_to_invert_var[0] & inversion_to_invert_var[1];
  assign _220_ = _219_ & inversion_to_invert_var[2];
  assign _221_ = _220_ ^ _218_;
  assign _222_ = _221_ | _208_;
  assign _223_ = inversion_to_invert_var[0] & inversion_to_invert_var[3];
  assign _224_ = _223_ ^ _214_;
  assign _225_ = inversion_to_invert_var[3] & inversion_to_invert_var[1];
  assign _000_ = _225_ ^ _224_;
  assign _001_ = inversion_to_invert_var[3] & inversion_to_invert_var[2];
  assign _002_ = _001_ ^ _000_;
  assign _003_ = ~_002_;
  assign _004_ = _003_ & alph[1];
  assign _005_ = _004_ ^ _222_;
  assign _006_ = inversion_to_invert_var[0] ? inversion_to_invert_var[1] : inversion_to_invert_var[2];
  assign _007_ = _006_ ^ _210_;
  assign _008_ = _007_ ^ _223_;
  assign _009_ = _216_ & inversion_to_invert_var[3];
  assign _010_ = _009_ ^ _008_;
  assign _011_ = ~_010_;
  assign _012_ = _011_ & alph[2];
  assign _013_ = _012_ ^ _005_;
  assign _014_ = ~alph[3];
  assign _015_ = ~_209_;
  assign _016_ = _219_ ^ _216_;
  assign _017_ = _016_ ^ _015_;
  assign _018_ = _017_ ^ inversion_to_invert_var[3];
  assign _019_ = _018_ ^ _225_;
  assign _020_ = _219_ & inversion_to_invert_var[3];
  assign _021_ = _020_ ^ _019_;
  assign _022_ = _021_ | _014_;
  assign _023_ = _022_ ^ _013_;
  assign _024_ = _217_ ^ _015_;
  assign _025_ = _220_ ^ _024_;
  assign _026_ = _025_ & ah_reg[0];
  assign _027_ = ~ah_reg[3];
  assign _028_ = _021_ | _027_;
  assign _029_ = _028_ ^ _026_;
  assign _030_ = _011_ & ah_reg[2];
  assign _031_ = _030_ ^ _029_;
  assign _032_ = _003_ & ah_reg[1];
  assign _033_ = ~_032_;
  assign _034_ = _033_ ^ _031_;
  assign _035_ = _034_ ^ _023_;
  assign _036_ = _021_ | _208_;
  assign _037_ = _002_ ^ _221_;
  assign _038_ = _037_ & alph[1];
  assign _039_ = _038_ ^ _036_;
  assign _040_ = _010_ ^ _002_;
  assign _041_ = _040_ & alph[2];
  assign _042_ = _041_ ^ _039_;
  assign _043_ = _021_ ^ _010_;
  assign _044_ = _043_ & alph[3];
  assign _045_ = _044_ ^ _042_;
  assign _046_ = _221_ | _027_;
  assign _047_ = ~_021_;
  assign _048_ = _047_ & ah_reg[2];
  assign _049_ = _048_ ^ _046_;
  assign _050_ = _011_ & ah_reg[1];
  assign _051_ = _050_ ^ _049_;
  assign _052_ = ah_reg[3] ^ ah_reg[0];
  assign _053_ = _052_ & _003_;
  assign _054_ = _053_ ^ _051_;
  assign _055_ = _054_ ^ _045_;
  assign _056_ = _032_ ^ _031_;
  assign _057_ = ~ah_reg[1];
  assign _058_ = _221_ | _057_;
  assign _059_ = _052_ & _047_;
  assign _060_ = _059_ ^ _058_;
  assign _061_ = ah_reg[2] ^ ah_reg[3];
  assign _062_ = _061_ & _011_;
  assign _063_ = _062_ ^ _060_;
  assign _064_ = ah_reg[1] ^ ah_reg[2];
  assign _065_ = _064_ & _003_;
  assign _066_ = _065_ ^ _063_;
  assign _067_ = _066_ ^ _056_;
  assign _068_ = _067_ ^ _055_;
  assign _069_ = _002_ | _208_;
  assign _070_ = _011_ & alph[1];
  assign _071_ = _070_ ^ _069_;
  assign _072_ = ~alph[2];
  assign _073_ = _021_ | _072_;
  assign _074_ = _073_ ^ _071_;
  assign _075_ = _037_ & alph[3];
  assign _076_ = _075_ ^ _074_;
  assign _077_ = _076_ ^ _068_;
  assign _078_ = _010_ | _208_;
  assign _079_ = _047_ & alph[1];
  assign _080_ = _079_ ^ _078_;
  assign _081_ = _037_ & alph[2];
  assign _082_ = _081_ ^ _080_;
  assign _083_ = _040_ & alph[3];
  assign _084_ = _083_ ^ _082_;
  assign _085_ = _084_ ^ _067_;
  assign _086_ = ~_085_;
  assign _087_ = _086_ ^ _077_;
  assign _088_ = _087_ ^ _035_;
  assign _089_ = _084_ ^ _055_;
  assign _090_ = _089_ ^ _076_;
  assign _091_ = _090_ ^ _034_;
  assign _092_ = _085_ ^ _054_;
  assign _093_ = _092_ ^ _091_;
  assign _094_ = _093_ ^ _088_;
  assign data_o[0] = decrypt_i ? _035_ : _094_;
  assign _095_ = _067_ ^ _054_;
  assign _096_ = ~_095_;
  assign _097_ = _095_ ^ _035_;
  assign _098_ = _097_ ^ _085_;
  assign _099_ = _098_ ^ _093_;
  assign data_o[1] = decrypt_i ? _096_ : _099_;
  assign _100_ = _066_ ^ _034_;
  assign _101_ = _045_ ^ _035_;
  assign _102_ = _101_ ^ _093_;
  assign data_o[2] = decrypt_i ? _068_ : _102_;
  assign _103_ = _100_ ^ _045_;
  assign _104_ = _025_ & ah_reg[2];
  assign _105_ = _021_ | _057_;
  assign _106_ = _105_ ^ _104_;
  assign _107_ = _052_ & _011_;
  assign _108_ = _107_ ^ _106_;
  assign _109_ = _061_ & _003_;
  assign _110_ = _109_ ^ _108_;
  assign _111_ = _110_ ^ _103_;
  assign _112_ = ~_111_;
  assign _113_ = _097_ ^ _092_;
  assign _114_ = _111_ ^ _068_;
  assign _115_ = _114_ ^ _113_;
  assign data_o[3] = decrypt_i ? _112_ : _115_;
  assign _116_ = _097_ ^ _077_;
  assign _117_ = _116_ ^ _114_;
  assign data_o[4] = decrypt_i ? _077_ : _117_;
  assign _118_ = _114_ ^ _095_;
  assign _119_ = _118_ ^ _090_;
  assign data_o[5] = decrypt_i ? _086_ : _119_;
  assign _120_ = ~_091_;
  assign _121_ = _114_ ^ _091_;
  assign _122_ = _121_ ^ _090_;
  assign data_o[6] = decrypt_i ? _120_ : _122_;
  assign _123_ = _111_ ^ _087_;
  assign _124_ = _123_ ^ _093_;
  assign data_o[7] = decrypt_i ? _092_ : _124_;
  assign _125_ = _200_ ^ ah[2];
  assign _126_ = _185_ ^ _184_;
  assign _127_ = _171_ ? data_i[0] : _126_;
  assign _128_ = _127_ ^ _183_;
  assign _129_ = _128_ ^ _188_;
  assign _130_ = _129_ ^ _199_;
  assign _131_ = _130_ ^ _125_;
  assign _132_ = _129_ | _189_;
  assign _133_ = _204_ ^ _177_;
  assign _134_ = ~_133_;
  assign _135_ = _134_ & ah[1];
  assign _136_ = _135_ ^ _132_;
  assign _137_ = ~_199_;
  assign _138_ = ah[2] & _137_;
  assign _139_ = _138_ ^ _136_;
  assign _140_ = _204_ ^ _194_;
  assign _141_ = ~_140_;
  assign _142_ = _141_ & ah[3];
  assign _143_ = _142_ ^ _139_;
  assign intermediate_to_invert_var[0] = _143_ ^ _131_;
  assign _144_ = _189_ ^ _137_;
  assign _145_ = _140_ | _189_;
  assign _146_ = _133_ ^ _129_;
  assign _147_ = _146_ & ah[1];
  assign _148_ = _147_ ^ _145_;
  assign _149_ = _133_ ^ _199_;
  assign _150_ = _149_ & ah[2];
  assign _151_ = _150_ ^ _148_;
  assign _152_ = _140_ ^ _199_;
  assign _153_ = _152_ & ah[3];
  assign _154_ = _153_ ^ _151_;
  assign intermediate_to_invert_var[1] = _154_ ^ _144_;
  assign _155_ = _137_ & ah[0];
  assign _156_ = _140_ | _200_;
  assign _157_ = _156_ ^ _155_;
  assign _158_ = _146_ & ah[2];
  assign _159_ = _158_ ^ _157_;
  assign _160_ = _149_ & ah[3];
  assign _161_ = _160_ ^ _159_;
  assign intermediate_to_invert_var[2] = _161_ ^ _176_;
  assign _162_ = _200_ ^ ah[0];
  assign _163_ = _162_ ^ _134_;
  assign _164_ = _133_ | _189_;
  assign _165_ = _137_ & _183_;
  assign _166_ = _165_ ^ _164_;
  assign _167_ = _141_ & ah[2];
  assign _168_ = _167_ ^ _166_;
  assign _169_ = _146_ & ah[3];
  assign _170_ = _169_ ^ _168_;
  assign intermediate_to_invert_var[3] = _170_ ^ _163_;
  assign next_alph[0] = _129_ ^ _189_;
  assign next_alph[1] = _140_ ^ _200_;
  assign next_alph[2] = ah[2] ^ _137_;
  assign next_alph[3] = _133_ ^ _201_;
  always @(posedge clk or negedge reset)
    if (!reset)
      ah_reg[0] <= 0;
    else
      ah_reg[0] <= ah[0];
  always @(posedge clk or negedge reset)
    if (!reset)
      ah_reg[1] <= 0;
    else
      ah_reg[1] <= ah[1];
  always @(posedge clk or negedge reset)
    if (!reset)
      ah_reg[2] <= 0;
    else
      ah_reg[2] <= ah[2];
  always @(posedge clk or negedge reset)
    if (!reset)
      ah_reg[3] <= 0;
    else
      ah_reg[3] <= ah[3];
  always @(posedge clk or negedge reset)
    if (!reset)
      alph[0] <= 0;
    else
      alph[0] <= next_alph[0];
  always @(posedge clk or negedge reset)
    if (!reset)
      alph[1] <= 0;
    else
      alph[1] <= next_alph[1];
  always @(posedge clk or negedge reset)
    if (!reset)
      alph[2] <= 0;
    else
      alph[2] <= next_alph[2];
  always @(posedge clk or negedge reset)
    if (!reset)
      alph[3] <= 0;
    else
      alph[3] <= next_alph[3];
  always @(posedge clk or negedge reset)
    if (!reset)
      inversion_to_invert_var[0] <= 0;
    else
      inversion_to_invert_var[0] <= intermediate_to_invert_var[0];
  always @(posedge clk or negedge reset)
    if (!reset)
      inversion_to_invert_var[1] <= 0;
    else
      inversion_to_invert_var[1] <= intermediate_to_invert_var[1];
  always @(posedge clk or negedge reset)
    if (!reset)
      inversion_to_invert_var[2] <= 0;
    else
      inversion_to_invert_var[2] <= intermediate_to_invert_var[2];
  always @(posedge clk or negedge reset)
    if (!reset)
      inversion_to_invert_var[3] <= 0;
    else
      inversion_to_invert_var[3] <= intermediate_to_invert_var[3];
  assign { ah2[3], ah2[1] } = ah[3:2];
  assign first_mux_aB = ah[3];
  assign first_mux_ah_t = ah;
  assign first_mux_data_var = data_i;
  assign next_ah_reg = ah;
  assign next_to_invert = intermediate_to_invert_var;
  assign square1_ah_t = { ah[3], ah2[2], ah[2], ah2[0] };
  assign sum1_alph_t = next_alph;
  assign to_invert = inversion_to_invert_var;
endmodule