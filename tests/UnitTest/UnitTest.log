[INFO :CM0023] Creating log file ../../build/tests/UnitTest/slpp_unit/surelog.log.

[INFO :CM0020] Separate compilation-unit mode is on.

PP PREPROCESS FILE: top.v
PP TOKENS: 
[@0,0:8='interface',<55>,1:0]
[@1,9:9=' ',<71>,1:9]
[@2,10:15='mem_if',<70>,1:10]
[@3,16:16=' ',<71>,1:16]
[@4,17:17='(',<82>,1:17]
[@5,18:22='input',<70>,1:18]
[@6,23:23=' ',<71>,1:23]
[@7,24:27='wire',<70>,1:24]
[@8,28:28=' ',<71>,1:28]
[@9,29:31='clk',<70>,1:29]
[@10,32:32=',',<84>,1:32]
[@11,33:33=' ',<71>,1:33]
[@12,34:39='output',<70>,1:34]
[@13,40:40=' ',<71>,1:40]
[@14,41:44='wire',<70>,1:41]
[@15,45:45=' ',<71>,1:45]
[@16,46:48='ooo',<70>,1:46]
[@17,49:49=')',<83>,1:49]
[@18,50:50=';',<92>,1:50]
[@19,51:51='\n',<78>,1:51]
[@20,52:53='  ',<71>,2:0]
[@21,54:57='wire',<70>,2:2]
[@22,58:65='        ',<71>,2:6]
[@23,66:70='reset',<70>,2:14]
[@24,71:71=';',<92>,2:19]
[@25,72:72='\n',<78>,2:20]
[@26,73:74='  ',<71>,3:0]
[@27,75:78='wire',<70>,3:2]
[@28,79:86='        ',<71>,3:6]
[@29,87:88='we',<70>,3:14]
[@30,89:89=';',<92>,3:16]
[@31,90:90='\n',<78>,3:17]
[@32,91:92='  ',<71>,4:0]
[@33,93:96='wire',<70>,4:2]
[@34,97:104='        ',<71>,4:6]
[@35,105:106='ce',<70>,4:14]
[@36,107:107=';',<92>,4:16]
[@37,108:108='\n',<78>,4:17]
[@38,109:110='  ',<71>,5:0]
[@39,111:114='wire',<70>,5:2]
[@40,115:116='  ',<71>,5:6]
[@41,117:117='[',<90>,5:8]
[@42,118:118='7',<74>,5:9]
[@43,119:119=':',<92>,5:10]
[@44,120:120='0',<74>,5:11]
[@45,121:121=']',<91>,5:12]
[@46,122:122=' ',<71>,5:13]
[@47,123:127='datai',<70>,5:14]
[@48,128:128=';',<92>,5:19]
[@49,129:129='\n',<78>,5:20]
[@50,130:131='  ',<71>,6:0]
[@51,132:136='logic',<70>,6:2]
[@52,137:137=' ',<71>,6:7]
[@53,138:138='[',<90>,6:8]
[@54,139:139='7',<74>,6:9]
[@55,140:140=':',<92>,6:10]
[@56,141:141='0',<74>,6:11]
[@57,142:142=']',<91>,6:12]
[@58,143:143=' ',<71>,6:13]
[@59,144:148='datao',<70>,6:14]
[@60,149:149=';',<92>,6:19]
[@61,150:150='\n',<78>,6:20]
[@62,151:152='  ',<71>,7:0]
[@63,153:156='wire',<70>,7:2]
[@64,157:158='  ',<71>,7:6]
[@65,159:159='[',<90>,7:8]
[@66,160:160='7',<74>,7:9]
[@67,161:161=':',<92>,7:10]
[@68,162:162='0',<74>,7:11]
[@69,163:163=']',<91>,7:12]
[@70,164:164=' ',<71>,7:13]
[@71,165:168='addr',<70>,7:14]
[@72,169:169=';',<92>,7:18]
[@73,170:170='\n',<78>,7:19]
[@74,171:172='  ',<71>,8:0]
[@75,173:224='//=================================================\n',<1>,8:2]
[@76,225:226='  ',<71>,9:0]
[@77,227:258='// Clocking block for testbench\n',<1>,9:2]
[@78,259:260='  ',<71>,10:0]
[@79,261:312='//=================================================\n',<1>,10:2]
[@80,313:314='  ',<71>,11:0]
[@81,315:322='clocking',<70>,11:2]
[@82,323:323=' ',<71>,11:10]
[@83,324:325='cb',<70>,11:11]
[@84,326:326=' ',<71>,11:13]
[@85,327:327='@',<92>,11:14]
[@86,328:328=' ',<71>,11:15]
[@87,329:329='(',<82>,11:16]
[@88,330:336='posedge',<70>,11:17]
[@89,337:337=' ',<71>,11:24]
[@90,338:340='clk',<70>,11:25]
[@91,341:341=')',<83>,11:28]
[@92,342:342=';',<92>,11:29]
[@93,343:343='\n',<78>,11:30]
[@94,344:347='    ',<71>,12:0]
[@95,348:353='output',<70>,12:4]
[@96,354:354=' ',<71>,12:10]
[@97,355:359='reset',<70>,12:11]
[@98,360:360=',',<84>,12:16]
[@99,361:361=' ',<71>,12:17]
[@100,362:363='we',<70>,12:18]
[@101,364:364=',',<84>,12:20]
[@102,365:365=' ',<71>,12:21]
[@103,366:367='ce',<70>,12:22]
[@104,368:368=',',<84>,12:24]
[@105,369:369=' ',<71>,12:25]
[@106,370:374='datai',<70>,12:26]
[@107,375:375=',',<84>,12:31]
[@108,376:379='addr',<70>,12:32]
[@109,380:380=';',<92>,12:36]
[@110,381:381='\n',<78>,12:37]
[@111,382:385='    ',<71>,13:0]
[@112,386:390='input',<70>,13:4]
[@113,391:392='  ',<71>,13:9]
[@114,393:397='datao',<70>,13:11]
[@115,398:398=';',<92>,13:16]
[@116,399:399='\n',<78>,13:17]
[@117,400:401='  ',<71>,14:0]
[@118,402:412='endclocking',<70>,14:2]
[@119,413:413='\n',<78>,14:13]
[@120,414:415='  ',<71>,15:0]
[@121,416:467='//=================================================\n',<1>,15:2]
[@122,468:469='  ',<71>,16:0]
[@123,470:495='// Modport for testbench \n',<1>,16:2]
[@124,496:497='  ',<71>,17:0]
[@125,498:549='//=================================================\n',<1>,17:2]
[@126,550:551='  ',<71>,18:0]
[@127,552:558='modport',<70>,18:2]
[@128,559:560='  ',<71>,18:9]
[@129,561:562='tb',<70>,18:11]
[@130,563:563=' ',<71>,18:13]
[@131,564:564='(',<82>,18:14]
[@132,565:572='clocking',<70>,18:15]
[@133,573:573=' ',<71>,18:23]
[@134,574:575='cb',<70>,18:24]
[@135,576:576=',',<84>,18:26]
[@136,577:577=' ',<71>,18:27]
[@137,578:582='input',<70>,18:28]
[@138,583:583=' ',<71>,18:33]
[@139,584:586='clk',<70>,18:34]
[@140,587:587=')',<83>,18:37]
[@141,588:588=';',<92>,18:38]
[@142,589:589='\n',<78>,18:39]
[@143,590:590='\n',<78>,19:0]
[@144,591:602='endinterface',<56>,20:0]
[@145,603:602='<EOF>',<-1>,20:12]
PP TREE: (top_level_rule null_rule (source_text (description (sv_interface interface)) (description (text_blob  )) (description (text_blob mem_if)) (description (text_blob  )) (description (text_blob ()) (description (text_blob input)) (description (text_blob  )) (description (text_blob wire)) (description (text_blob  )) (description (text_blob clk)) (description (text_blob ,)) (description (text_blob  )) (description (text_blob output)) (description (text_blob  )) (description (text_blob wire)) (description (text_blob  )) (description (text_blob ooo)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob wire)) (description (text_blob         )) (description (text_blob reset)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob wire)) (description (text_blob         )) (description (text_blob we)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob wire)) (description (text_blob         )) (description (text_blob ce)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob wire)) (description (text_blob   )) (description (text_blob [)) (description (number 7)) (description (text_blob :)) (description (number 0)) (description (text_blob ])) (description (text_blob  )) (description (text_blob datai)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob logic)) (description (text_blob  )) (description (text_blob [)) (description (number 7)) (description (text_blob :)) (description (number 0)) (description (text_blob ])) (description (text_blob  )) (description (text_blob datao)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob wire)) (description (text_blob   )) (description (text_blob [)) (description (number 7)) (description (text_blob :)) (description (number 0)) (description (text_blob ])) (description (text_blob  )) (description (text_blob addr)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (comments //=================================================\n)) (description (text_blob   )) (description (comments // Clocking block for testbench\n)) (description (text_blob   )) (description (comments //=================================================\n)) (description (text_blob   )) (description (text_blob clocking)) (description (text_blob  )) (description (text_blob cb)) (description (text_blob  )) (description (text_blob @)) (description (text_blob  )) (description (text_blob ()) (description (text_blob posedge)) (description (text_blob  )) (description (text_blob clk)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob     )) (description (text_blob output)) (description (text_blob  )) (description (text_blob reset)) (description (text_blob ,)) (description (text_blob  )) (description (text_blob we)) (description (text_blob ,)) (description (text_blob  )) (description (text_blob ce)) (description (text_blob ,)) (description (text_blob  )) (description (text_blob datai)) (description (text_blob ,)) (description (text_blob addr)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob     )) (description (text_blob input)) (description (text_blob   )) (description (text_blob datao)) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob   )) (description (text_blob endclocking)) (description (text_blob \n)) (description (text_blob   )) (description (comments //=================================================\n)) (description (text_blob   )) (description (comments // Modport for testbench \n)) (description (text_blob   )) (description (comments //=================================================\n)) (description (text_blob   )) (description (text_blob modport)) (description (text_blob   )) (description (text_blob tb)) (description (text_blob  )) (description (text_blob ()) (description (text_blob clocking)) (description (text_blob  )) (description (text_blob cb)) (description (text_blob ,)) (description (text_blob  )) (description (text_blob input)) (description (text_blob  )) (description (text_blob clk)) (description (text_blob ))) (description (text_blob ;)) (description (text_blob \n)) (description (text_blob \n)) (description (endinterface endinterface))) <EOF>)

[WARNI:PA0205] top.v:1 No timescale set for "mem_if".

[INFO :CP0300] Compilation...

[INFO :CP0304] top.v:1 Compile interface "work@mem_if".

[INFO :EL0526] Design Elaboration...

[NOTE :EL0508] Nb Top level modules: 0.

[NOTE :EL0509] Max instance depth: 0.

[NOTE :EL0510] Nb instances: 0.

[NOTE :EL0511] Nb leaf instances: 0.

[  FATAL] : 0
[ SYNTAX] : 0
[  ERROR] : 0
[WARNING] : 1
[   NOTE] : 4

