
// This file is automatically generated by generate_parser_listener.tcl
// DO NOT EDIT

#ifndef VOBJECTTYPES_H
#define VOBJECTTYPES_H
enum VObjectType {
      sl0 = 0,
      sl1 = 1,
      slAccelerate_directive = 2,
      slAction_block = 3,
      slActual_arg_expr = 4,
      slActual_arg_list = 5,
      slAlways_construct = 6,
      slAlwaysKeywd_Always = 7,
      slAlwaysKeywd_Comb = 8,
      slAlwaysKeywd_FF = 9,
      slAlwaysKeywd_Latch = 10,
      slAnd_call = 11,
      slAnonymous_program = 12,
      slAnonymous_program_item = 13,
      slAnsi_port_declaration = 14,
      slArray_manipulation_call = 15,
      slArray_member_label = 16,
      slArray_method_name = 17,
      slArray_pattern_key = 18,
      slArray_range_expression = 19,
      slAssert_property_statement = 20,
      slAssertion_item = 21,
      slAssertion_item_declaration = 22,
      slAssertion_variable_declaration = 23,
      slAssignment_pattern = 24,
      slAssignment_pattern_expression = 25,
      slAssignment_pattern_expression_type = 26,
      slAssignment_pattern_key = 27,
      slAssignment_pattern_net_lvalue = 28,
      slAssignment_pattern_variable_lvalue = 29,
      slAssignOp_Add = 30,
      slAssignOp_ArithShiftLeft = 31,
      slAssignOp_ArithShiftRight = 32,
      slAssignOp_Assign = 33,
      slAssignOp_BitwAnd = 34,
      slAssignOp_BitwLeftShift = 35,
      slAssignOp_BitwOr = 36,
      slAssignOp_BitwRightShift = 37,
      slAssignOp_BitwXor = 38,
      slAssignOp_Div = 39,
      slAssignOp_Modulo = 40,
      slAssignOp_Mult = 41,
      slAssignOp_Sub = 42,
      slAssociative_dimension = 43,
      slAssume_property_statement = 44,
      slAttr_name = 45,
      slAttr_spec = 46,
      slAttribute_instance = 47,
      slAutoexpand_vectornets_directive = 48,
      slBegin_keywords_directive = 49,
      slBind_directive = 50,
      slBind_instantiation = 51,
      slBinModOp_BitwAnd = 52,
      slBinModOp_BitwOr = 53,
      slBinModOp_BitwXor = 54,
      slBinModOp_Equiv = 55,
      slBinModOp_LogicAnd = 56,
      slBinModOp_LogicOr = 57,
      slBinModOp_NotEqual = 58,
      slBinModOp_ReductXnor1 = 59,
      slBinModOp_ReductXnor2 = 60,
      slBinOp_ArithShiftLeft = 61,
      slBinOp_ArithShiftRight = 62,
      slBinOp_BitwAnd = 63,
      slBinOp_BitwOr = 64,
      slBinOp_BitwXor = 65,
      slBinOp_Div = 66,
      slBinOp_Equiv = 67,
      slBinOp_Equivalence = 68,
      slBinOp_FourStateLogicEqual = 69,
      slBinOp_FourStateLogicNotEqual = 70,
      slBinOp_Great = 71,
      slBinOp_GreatEqual = 72,
      slBinOp_Imply = 73,
      slBinOp_Less = 74,
      slBinOp_LessEqual = 75,
      slBinOp_LogicAnd = 76,
      slBinOp_LogicOr = 77,
      slBinOp_Minus = 78,
      slBinOp_Mult = 79,
      slBinOp_MultMult = 80,
      slBinOp_Not = 81,
      slBinOp_Percent = 82,
      slBinOp_Plus = 83,
      slBinOp_ReductNand = 84,
      slBinOp_ReductNor = 85,
      slBinOp_ReductXnor1 = 86,
      slBinOp_ReductXnor2 = 87,
      slBinOp_ShiftLeft = 88,
      slBinOp_ShiftRight = 89,
      slBinOp_WildcardEqual = 90,
      slBinOp_WildcardNotEqual = 91,
      slBinOp_WildEqual = 92,
      slBinOp_WildNotEqual = 93,
      slBins_Bins = 94,
      slBins_expression = 95,
      slBins_Ignore = 96,
      slBins_Illegal = 97,
      slBins_or_empty = 98,
      slBins_or_options = 99,
      slBins_selection = 100,
      slBins_selection_or_option = 101,
      slBit_select = 102,
      slBlock_event_expression = 103,
      slBlock_item_declaration = 104,
      slBlocking_assignment = 105,
      slBoolean_abbrev = 106,
      slBuilt_in_method_call = 107,
      slCase_generate_construct = 108,
      slCase_generate_item = 109,
      slCase_inside_item = 110,
      slCase_item = 111,
      slCase_pattern_item = 112,
      slCase_statement = 113,
      slCaseKeyword_Case = 114,
      slCaseKeyword_CaseX = 115,
      slCaseKeyword_CaseZ = 116,
      slCast = 117,
      slCasting_type = 118,
      slCell_clause = 119,
      slCelldefine_directive = 120,
      slChandle_type = 121,
      slChargeStrength_Large = 122,
      slChargeStrength_Medium = 123,
      slChargeStrength_Small = 124,
      slChecker = 125,
      slChecker_declaration = 126,
      slChecker_generate_item = 127,
      slChecker_instantiation = 128,
      slChecker_or_generate_item = 129,
      slChecker_or_generate_item_declaration = 130,
      slChecker_port_item = 131,
      slChecker_port_list = 132,
      slClass = 133,
      slClass_constraint = 134,
      slClass_constructor_declaration = 135,
      slClass_constructor_prototype = 136,
      slClass_declaration = 137,
      slClass_item = 138,
      slClass_keyword = 139,
      slClass_method = 140,
      slClass_new = 141,
      slClass_property = 142,
      slClass_scope = 143,
      slClass_type = 144,
      slClassItemQualifier_Local = 145,
      slClassItemQualifier_Protected = 146,
      slClassItemQualifier_Static = 147,
      slClocking_decl_assign = 148,
      slClocking_declaration = 149,
      slClocking_drive = 150,
      slClocking_event = 151,
      slClocking_item = 152,
      slClocking_skew = 153,
      slClockingDir_Inout = 154,
      slClockingDir_Input = 155,
      slClockingDir_InputOutput = 156,
      slClockingDir_Output = 157,
      slClockvar = 158,
      slClockvar_expression = 159,
      slCmos_switch_instance = 160,
      slCmosSwitchType_Cmos = 161,
      slCmosSwitchType_RCmos = 162,
      slCombinational_body = 163,
      slCombinational_entry = 164,
      slComments = 165,
      slComplex_func_call = 166,
      slConcatenation = 167,
      slConcurrent_assertion_item = 168,
      slConcurrent_assertion_item_declaration = 169,
      slConcurrent_assertion_statement = 170,
      slCond_predicate = 171,
      slConditional_generate_construct = 172,
      slConditional_statement = 173,
      slConfig = 174,
      slConfig_declaration = 175,
      slConfig_rule_statement = 176,
      slConsecutive_repetition = 177,
      slConst_or_range_expression = 178,
      slConst_type = 179,
      slConstant_assignment_pattern_expression = 180,
      slConstant_bit_select = 181,
      slConstant_cast = 182,
      slConstant_concatenation = 183,
      slConstant_expression = 184,
      slConstant_indexed_range = 185,
      slConstant_mintypmax_expression = 186,
      slConstant_multiple_concatenation = 187,
      slConstant_param_expression = 188,
      slConstant_part_select_range = 189,
      slConstant_primary = 190,
      slConstant_range = 191,
      slConstant_range_expression = 192,
      slConstant_select = 193,
      slConstantSelect = 194,
      slConstraint_block = 195,
      slConstraint_block_item = 196,
      slConstraint_declaration = 197,
      slConstraint_expression = 198,
      slConstraint_primary = 199,
      slConstraint_prototype = 200,
      slConstraint_set = 201,
      slConstSelect = 202,
      slContext_keyword = 203,
      slContinuous_assign = 204,
      slControlled_timing_check_event = 205,
      slCover_cross = 206,
      slCover_point = 207,
      slCover_property_statement = 208,
      slCover_sequence_statement = 209,
      slCoverage_event = 210,
      slCoverage_option = 211,
      slCoverage_spec = 212,
      slCoverage_spec_or_option = 213,
      slCovergroup_declaration = 214,
      slCR = 215,
      slCross_body = 216,
      slCross_body_item = 217,
      slCross_item = 218,
      slCycle_delay = 219,
      slCycle_delay_const_range_expression = 220,
      slCycle_delay_range = 221,
      slData_declaration = 222,
      slData_type = 223,
      slData_type_or_implicit = 224,
      slData_type_or_void = 225,
      slDefault_clause = 226,
      slDefault_decay_time_directive = 227,
      slDefault_nettype_directive = 228,
      slDefault_trireg_strenght_directive = 229,
      slDefault_value = 230,
      slDefaultSkew_Intput = 231,
      slDefaultSkew_IntputOutput = 232,
      slDefaultSkew_Output = 233,
      slDeferred_immediate_assert_statement = 234,
      slDeferred_immediate_assertion_item = 235,
      slDeferred_immediate_assertion_statement = 236,
      slDeferred_immediate_assume_statement = 237,
      slDeferred_immediate_cover_statement = 238,
      slDefine_directive = 239,
      slDefparam_assignment = 240,
      slDelay2 = 241,
      slDelay3 = 242,
      slDelay_control = 243,
      slDelay_mode_distributed_directive = 244,
      slDelay_mode_path_directive = 245,
      slDelay_mode_unit_directive = 246,
      slDelay_mode_zero_directive = 247,
      slDelay_or_event_control = 248,
      slDelay_value = 249,
      slDelayed_data = 250,
      slDelayed_reference = 251,
      slDescription = 252,
      slDesign_statement = 253,
      slDirective_in_macro = 254,
      slDisable_portfaults_directive = 255,
      slDisable_statement = 256,
      slDist_item = 257,
      slDist_list = 258,
      slDistWeight_AssignRange = 259,
      slDistWeight_AssignValue = 260,
      slDollar_fullskew_timing_check = 261,
      slDollar_hold_timing_check = 262,
      slDollar_keyword = 263,
      slDollar_nochange_timing_check = 264,
      slDollar_period_timing_check = 265,
      slDollar_recovery_timing_check = 266,
      slDollar_recrem_timing_check = 267,
      slDollar_removal_timing_check = 268,
      slDollar_root_keyword = 269,
      slDollar_setup_timing_check = 270,
      slDollar_setuphold_timing_check = 271,
      slDollar_skew_timing_check = 272,
      slDollar_timeskew_timing_check = 273,
      slDollar_width_timing_check = 274,
      slDpi_import_export = 275,
      slDrive_strength = 276,
      slDynamic_array_new = 277,
      slEdge_control_specifier = 278,
      slEdge_descriptor = 279,
      slEdge_Edge = 280,
      slEdge_indicator = 281,
      slEdge_input_list = 282,
      slEdge_Negedge = 283,
      slEdge_Posedge = 284,
      slEdge_sensitive_path_declaration = 285,
      slEdge_symbol = 286,
      slElaboration_system_task = 287,
      slElse_directive = 288,
      slElseif_directive = 289,
      slElseif_directive_in_macro_body = 290,
      slElsif_directive = 291,
      slElsif_directive_in_macro_body = 292,
      slEmpty_queue = 293,
      slEnable_gate_instance = 294,
      slEnable_portfaults_directive = 295,
      slEnableGateType_Bufif0 = 296,
      slEnableGateType_Bufif1 = 297,
      slEnableGateType_Notif0 = 298,
      slEnableGateType_Notif1 = 299,
      slEnd = 300,
      slEnd_edge_offset = 301,
      slEnd_keywords_directive = 302,
      slEndcase = 303,
      slEndcelldefine_directive = 304,
      slEndchecker = 305,
      slEndclass = 306,
      slEndclocking = 307,
      slEndconfig = 308,
      slEndfunction = 309,
      slEndgenerate = 310,
      slEndgroup = 311,
      slEndif_directive = 312,
      slEndinterface = 313,
      slEndmodule = 314,
      slEndpackage = 315,
      slEndprimitive = 316,
      slEndprogram = 317,
      slEndproperty = 318,
      slEndprotect_directive = 319,
      slEndprotected_directive = 320,
      slEndsequence = 321,
      slEndspecify = 322,
      slEndtable = 323,
      slEndtask = 324,
      slEnum_base_type = 325,
      slEnum_keyword = 326,
      slEnum_name_declaration = 327,
      slEscaped_identifier = 328,
      slEscaped_macro_definition_body = 329,
      slEscaped_macro_definition_body_alt1 = 330,
      slEscaped_macro_definition_body_alt2 = 331,
      slEscapedCR = 332,
      slEvent_based_flag = 333,
      slEvent_control = 334,
      slEvent_expression = 335,
      slEvent_trigger = 336,
      slEvent_type = 337,
      slEveryRule = 338,
      slExpand_vectornets_directive = 339,
      slExpect_property_statement = 340,
      slExpression = 341,
      slExpression_or_cond_pattern = 342,
      slExpression_or_dist = 343,
      slExtern_constraint_declaration = 344,
      slExtern_qualifier = 345,
      slExtern_tf_declaration = 346,
      slFile_path_spec = 347,
      slFinal_construct = 348,
      slFor_initialization = 349,
      slFor_step = 350,
      slFor_step_assignment = 351,
      slFor_variable_declaration = 352,
      slForever_keyword = 353,
      slFull_edge_sensitive_path_description = 354,
      slFull_path_description = 355,
      slFunction_body_declaration = 356,
      slFunction_data_type = 357,
      slFunction_data_type_or_implicit = 358,
      slFunction_declaration = 359,
      slFunction_name_decl = 360,
      slFunction_prototype = 361,
      slFunction_statement_or_null = 362,
      slGate_instantiation = 363,
      slGenerate_block = 364,
      slGenerate_interface_block = 365,
      slGenerate_interface_case_statement = 366,
      slGenerate_interface_conditional_statement = 367,
      slGenerate_interface_item = 368,
      slGenerate_interface_loop_statement = 369,
      slGenerate_interface_named_block = 370,
      slGenerate_item = 371,
      slGenerate_module_block = 372,
      slGenerate_module_case_statement = 373,
      slGenerate_module_conditional_statement = 374,
      slGenerate_module_item = 375,
      slGenerate_module_loop_statement = 376,
      slGenerate_module_named_block = 377,
      slGenerate_region = 378,
      slGenerated_interface_instantiation = 379,
      slGenerated_module_instantiation = 380,
      slGenericElementType = 381,
      slGenvar_assignment = 382,
      slGenvar_decl_assignment = 383,
      slGenvar_declaration = 384,
      slGenvar_initialization = 385,
      slGenvar_interface_case_item = 386,
      slGenvar_iteration = 387,
      slGenvar_module_case_item = 388,
      slGoto_repetition = 389,
      slHierarchical_btf_identifier = 390,
      slHierarchical_identifier = 391,
      slHierarchical_instance = 392,
      slIdentifier = 393,
      slIdentifier_in_macro_body = 394,
      slIdentifier_list = 395,
      slIf_generate_construct = 396,
      slIfdef_directive = 397,
      slIfdef_directive_in_macro_body = 398,
      slIfndef_directive = 399,
      slIfndef_directive_in_macro_body = 400,
      slImmediate_assertion_statement = 401,
      slImplicit_class_handle = 402,
      slImplicit_data_type = 403,
      slInc_or_dec_expression = 404,
      slIncDec_MinusMinus = 405,
      slIncDec_PlusPlus = 406,
      slInclude_directive = 407,
      slInclude_statement = 408,
      slIndexed_range = 409,
      slInitial_construct = 410,
      slInitVal_1TickB0 = 411,
      slInitVal_1Tickb0 = 412,
      slInitVal_1TickB1 = 413,
      slInitVal_1Tickb1 = 414,
      slInitVal_1TickBX = 415,
      slInitVal_1TickBx = 416,
      slInitVal_1TickbX = 417,
      slInitVal_1Tickbx = 418,
      slInitVal_Integral = 419,
      slInout_declaration = 420,
      slInput_declaration = 421,
      slInst_clause = 422,
      slInst_name = 423,
      slIntConst = 424,
      slInteger_type = 425,
      slIntegerAtomType_Byte = 426,
      slIntegerAtomType_Int = 427,
      slIntegerAtomType_LongInt = 428,
      slIntegerAtomType_Shortint = 429,
      slIntegerAtomType_Time = 430,
      slInterface = 431,
      slInterface_ansi_header = 432,
      slInterface_class_declaration = 433,
      slInterface_class_item = 434,
      slInterface_class_keyword = 435,
      slInterface_class_method = 436,
      slInterface_class_type = 437,
      slInterface_declaration = 438,
      slInterface_identifier = 439,
      slInterface_instantiation = 440,
      slInterface_item = 441,
      slInterface_nonansi_header = 442,
      slInterface_or_generate_item = 443,
      slInterface_port_declaration = 444,
      slInterface_port_header = 445,
      slIntVec_TypeBit = 446,
      slIntVec_TypeLogic = 447,
      slIntVec_TypeReg = 448,
      slJoin_any_keyword = 449,
      slJoin_keyword = 450,
      slJoin_none_keyword = 451,
      slJump_statement = 452,
      slLet_declaration = 453,
      slLet_formal_type = 454,
      slLet_port_item = 455,
      slLet_port_list = 456,
      slLevel_input_list = 457,
      slLevel_symbol = 458,
      slLiblist_clause = 459,
      slLibrary_declaration = 460,
      slLibrary_descriptions = 461,
      slLibrary_text = 462,
      slLifetime_Automatic = 463,
      slLifetime_Static = 464,
      slLine_directive = 465,
      slList_of_arguments = 466,
      slList_of_checker_port_connections = 467,
      slList_of_clocking_decl_assign = 468,
      slList_of_cross_items = 469,
      slList_of_defparam_assignments = 470,
      slList_of_interface_identifiers = 471,
      slList_of_net_assignments = 472,
      slList_of_net_decl_assignments = 473,
      slList_of_param_assignments = 474,
      slList_of_parameter_assignments = 475,
      slList_of_path_delay_expressions = 476,
      slList_of_path_inputs = 477,
      slList_of_path_outputs = 478,
      slList_of_port_connections = 479,
      slList_of_port_declarations = 480,
      slList_of_port_identifiers = 481,
      slList_of_ports = 482,
      slList_of_specparam_assignments = 483,
      slList_of_tf_variable_identifiers = 484,
      slList_of_type_assignments = 485,
      slList_of_variable_assignments = 486,
      slList_of_variable_decl_assignments = 487,
      slList_of_variable_identifiers = 488,
      slList_of_variable_port_identifiers = 489,
      slList_of_virtual_interface_decl = 490,
      slLocal_parameter_declaration = 491,
      slLoop_generate_construct = 492,
      slLoop_statement = 493,
      slLoop_variables = 494,
      slMacro_actual_args = 495,
      slMacro_arg = 496,
      slMacro_arguments = 497,
      slMacro_definition = 498,
      slMacroInstanceNoArgs = 499,
      slMacroInstanceWithArgs = 500,
      slMethod_call = 501,
      slMethod_call_body = 502,
      slMethod_call_root = 503,
      slMethod_prototype = 504,
      slMethodQualifier_ClassItem = 505,
      slMethodQualifier_Virtual = 506,
      slMintypmax_expression = 507,
      slModport_hierarchical_ports_declaration = 508,
      slModport_item = 509,
      slModport_ports_declaration = 510,
      slModport_simple_port = 511,
      slModport_simple_ports_declaration = 512,
      slModport_tf_port = 513,
      slModport_tf_ports_declaration = 514,
      slModule = 515,
      slModule_ansi_header = 516,
      slModule_common_item = 517,
      slModule_declaration = 518,
      slModule_instantiation = 519,
      slModule_item = 520,
      slModule_keyword = 521,
      slModule_nonansi_header = 522,
      slModule_or_generate_item = 523,
      slModule_or_generate_item_declaration = 524,
      slModule_path_concatenation = 525,
      slModule_path_expression = 526,
      slModule_path_mintypmax_expression = 527,
      slModule_path_multiple_concatenation = 528,
      slModule_path_primary = 529,
      slModuleInstance = 530,
      slMos_switch_instance = 531,
      slMosSwitchType_NMos = 532,
      slMosSwitchType_PMos = 533,
      slMosSwitchType_RNMos = 534,
      slMosSwitchType_RPMos = 535,
      slMultiline_args_macro_definition = 536,
      slMultiline_no_args_macro_definition = 537,
      slMultiple_concatenation = 538,
      slN_input_gate_instance = 539,
      slN_output_gate_instance = 540,
      slName_of_instance = 541,
      slNamed_checker_port_connection = 542,
      slNamed_parameter_assignment = 543,
      slNamed_port_connection = 544,
      slNet_alias = 545,
      slNet_assignment = 546,
      slNet_decl_assignment = 547,
      slNet_declaration = 548,
      slNet_lvalue = 549,
      slNet_port_header = 550,
      slNet_port_type = 551,
      slNet_type_declaration = 552,
      slNetType_Supply0 = 553,
      slNetType_Supply1 = 554,
      slNetType_Tri = 555,
      slNetType_Tri0 = 556,
      slNetType_Tri1 = 557,
      slNetType_TriAnd = 558,
      slNetType_TriOr = 559,
      slNetType_TriReg = 560,
      slNetType_Uwire = 561,
      slNetType_Wand = 562,
      slNetType_Wire = 563,
      slNetType_Wor = 564,
      slNext_state = 565,
      slNInpGate_And = 566,
      slNInpGate_Nand = 567,
      slNInpGate_Nor = 568,
      slNInpGate_Or = 569,
      slNInpGate_Xnor = 570,
      slNInpGate_Xor = 571,
      slNoaccelerate_directive = 572,
      slNoexpand_vectornets_directive = 573,
      slNon_consecutive_repetition = 574,
      slNon_port_interface_item = 575,
      slNon_port_module_item = 576,
      slNon_port_program_item = 577,
      slNonblocking_assignment = 578,
      slNonIntType_Real = 579,
      slNonIntType_RealTime = 580,
      slNonIntType_ShortReal = 581,
      slNonrange_select = 582,
      slNonrange_variable_lvalue = 583,
      slNoremove_gatenames_directive = 584,
      slNoremove_netnames_directive = 585,
      slNosuppress_faults_directive = 586,
      slNotifier = 587,
      slNoType = 588,
      slNounconnected_drive_directive = 589,
      slNOutGate_Buf = 590,
      slNOutGate_Not = 591,
      slNull_keyword = 592,
      slNull_rule = 593,
      slNumber = 594,
      slNumber_1TickB0 = 595,
      slNumber_1Tickb0 = 596,
      slNumber_1TickB1 = 597,
      slNumber_1Tickb1 = 598,
      slNumber_1TickBX = 599,
      slNumber_1TickBx = 600,
      slNumber_1TickbX = 601,
      slNumber_1Tickbx = 602,
      slNumber_Integral = 603,
      slNumber_Real = 604,
      slNumber_Tick0 = 605,
      slNumber_Tick1 = 606,
      slNumber_TickB0 = 607,
      slNumber_Tickb0 = 608,
      slNumber_TickB1 = 609,
      slNumber_Tickb1 = 610,
      slOpen_range_list = 611,
      slOperator_assignment = 612,
      slOr_call = 613,
      slOrdered_checker_port_connection = 614,
      slOrdered_parameter_assignment = 615,
      slOrdered_port_connection = 616,
      slOutput_declaration = 617,
      slOutput_symbol = 618,
      slOverload_declaration = 619,
      slOverload_proto_formals = 620,
      slOverloadOp_Div = 621,
      slOverloadOp_Equal = 622,
      slOverloadOp_Equiv = 623,
      slOverloadOp_Greater = 624,
      slOverloadOp_GreaterEqual = 625,
      slOverloadOp_Less = 626,
      slOverloadOp_LessEqual = 627,
      slOverloadOp_Minus = 628,
      slOverloadOp_MinusMinus = 629,
      slOverloadOp_Mult = 630,
      slOverloadOp_NotEqual = 631,
      slOverloadOp_Percent = 632,
      slOverloadOp_Plus = 633,
      slOverloadOp_PlusPlus = 634,
      slOverloadOp_StarStar = 635,
      slPackage = 636,
      slPackage_declaration = 637,
      slPackage_export_declaration = 638,
      slPackage_import_declaration = 639,
      slPackage_import_item = 640,
      slPackage_item = 641,
      slPackage_or_generate_item_declaration = 642,
      slPackage_scope = 643,
      slPacked_dimension = 644,
      slPacked_keyword = 645,
      slPaired_parens = 646,
      slPar_block = 647,
      slParallel_edge_sensitive_path_description = 648,
      slParallel_path_description = 649,
      slParam_assignment = 650,
      slParam_expression = 651,
      slParameter_declaration = 652,
      slParameter_override = 653,
      slParameter_port_declaration = 654,
      slParameter_port_list = 655,
      slParameter_value_assignment = 656,
      slPart_select_range = 657,
      slPass_enable_switch_instance = 658,
      slPass_switch_instance = 659,
      slPassEnSwitch_RTranif0 = 660,
      slPassEnSwitch_RTranif1 = 661,
      slPassEnSwitch_Tranif0 = 662,
      slPassEnSwitch_Tranif1 = 663,
      slPassSwitch_RTran = 664,
      slPassSwitch_Tran = 665,
      slPath_declaration = 666,
      slPath_delay_expression = 667,
      slPath_delay_value = 668,
      slPattern = 669,
      slPort = 670,
      slPort_declaration = 671,
      slPort_expression = 672,
      slPort_reference = 673,
      slPortDir_Inout = 674,
      slPortDir_Inp = 675,
      slPortDir_Out = 676,
      slPortDir_Ref = 677,
      slPortInst = 678,
      slPound_delay = 679,
      slPound_delay_value = 680,
      slPragma_directive = 681,
      slPragma_expression = 682,
      slPragma_value = 683,
      slPrimary = 684,
      slPrimary_literal = 685,
      slPrimitive = 686,
      slPrimitiveInstance = 687,
      slProcedural_assertion_statement = 688,
      slProcedural_continuous_assignment = 689,
      slProcedural_timing_control = 690,
      slProcedural_timing_control_statement = 691,
      slProduction = 692,
      slProduction_item = 693,
      slProgram = 694,
      slProgram_ansi_header = 695,
      slProgram_declaration = 696,
      slProgram_generate_item = 697,
      slProgram_instantiation = 698,
      slProgram_item = 699,
      slProgram_nonansi_header = 700,
      slProperty_actual_arg = 701,
      slProperty_case_item = 702,
      slProperty_declaration = 703,
      slProperty_expr = 704,
      slProperty_formal_type = 705,
      slProperty_instance = 706,
      slProperty_lvar_port_direction = 707,
      slProperty_port_item = 708,
      slProperty_port_list = 709,
      slProperty_spec = 710,
      slPropQualifier_ClassItem = 711,
      slPropQualifier_Rand = 712,
      slPropQualifier_Randc = 713,
      slProtect_directive = 714,
      slProtected_directive = 715,
      slPs_identifier = 716,
      slPs_or_hierarchical_array_identifier = 717,
      slPs_or_hierarchical_identifier = 718,
      slPs_or_hierarchical_sequence_identifier = 719,
      slPs_type_identifier = 720,
      slPull_gate_instance = 721,
      slPulldownStrength_0 = 722,
      slPulldownStrength_01 = 723,
      slPulldownStrength_10 = 724,
      slPullupStrength_1 = 725,
      slPullupStrength_01 = 726,
      slPullupStrength_10 = 727,
      slPulse_control_specparam = 728,
      slPulsestyle_declaration = 729,
      slPure_keyword = 730,
      slPure_virtual_qualifier = 731,
      slQueue_dimension = 732,
      slRandcase_item = 733,
      slRandcase_statement = 734,
      slRandomize_call = 735,
      slRandomQualifier_Rand = 736,
      slRandomQualifier_RandC = 737,
      slRandsequence_statement = 738,
      slRange_expression = 739,
      slRange_list = 740,
      slRealConst = 741,
      slRef_declaration = 742,
      slReference_event = 743,
      slRemain_active_flag = 744,
      slRemove_gatename_directive = 745,
      slRemove_netname_directive = 746,
      slRepeat_keyword = 747,
      slRepeat_range = 748,
      slResetall_directive = 749,
      slRestrict_property_statement = 750,
      slRs_case = 751,
      slRs_case_item = 752,
      slRs_code_block = 753,
      slRs_if_else = 754,
      slRs_prod = 755,
      slRs_production_list = 756,
      slRs_repeat = 757,
      slRs_rule = 758,
      slScalar_1TickB0 = 759,
      slScalar_1Tickb0 = 760,
      slScalar_1TickB1 = 761,
      slScalar_1Tickb1 = 762,
      slScalar_Integral = 763,
      slScalar_TickB0 = 764,
      slScalar_Tickb0 = 765,
      slScalar_TickB1 = 766,
      slScalar_Tickb1 = 767,
      slScalar_timing_check_condition = 768,
      slSelect = 769,
      slSelect_condition = 770,
      slSelect_expression = 771,
      slSeq_block = 772,
      slSeq_input_list = 773,
      slSeqFormatType_Data = 774,
      slSeqFormatType_Sequence = 775,
      slSeqFormatType_Untyped = 776,
      slSeqLvarPortDir_Inout = 777,
      slSeqLvarPortDir_Input = 778,
      slSeqLvarPortDir_Output = 779,
      slSequence_actual_arg = 780,
      slSequence_declaration = 781,
      slSequence_expr = 782,
      slSequence_instance = 783,
      slSequence_list_of_arguments = 784,
      slSequence_match_item = 785,
      slSequence_method_call = 786,
      slSequence_port_item = 787,
      slSequence_port_list = 788,
      slSequential_body = 789,
      slSequential_entry = 790,
      slShowcancelled_declaration = 791,
      slSigned_directive = 792,
      slSigning_Signed = 793,
      slSigning_Unsigned = 794,
      slSimple_args_macro_definition = 795,
      slSimple_args_macro_definition_in_macro_body = 796,
      slSimple_immediate_assert_statement = 797,
      slSimple_immediate_assertion_statement = 798,
      slSimple_immediate_assume_statement = 799,
      slSimple_immediate_cover_statement = 800,
      slSimple_macro_definition_body = 801,
      slSimple_macro_definition_body_in_macro_body = 802,
      slSimple_no_args_macro_definition = 803,
      slSimple_no_args_macro_definition_in_macro_body = 804,
      slSimple_path_declaration = 805,
      slSimple_type = 806,
      slSlice_size = 807,
      slSlline = 808,
      slSolve_before_list = 809,
      slSource_text = 810,
      slSpaces = 811,
      slSpecify_block = 812,
      slSpecify_input_terminal_descriptor = 813,
      slSpecify_item = 814,
      slSpecify_output_terminal_descriptor = 815,
      slSpecify_terminal_descriptor = 816,
      slSpecparam_assignment = 817,
      slSpecparam_declaration = 818,
      slStamptime_condition = 819,
      slStart_edge_offset = 820,
      slState_dependent_path_declaration = 821,
      slStatement = 822,
      slStatement_item = 823,
      slStatement_or_null = 824,
      slStream_concatenation = 825,
      slStream_expression = 826,
      slStream_operator = 827,
      slStreaming_concatenation = 828,
      slStrength0_Pull0 = 829,
      slStrength0_Strong0 = 830,
      slStrength0_Supply0 = 831,
      slStrength0_Weak0 = 832,
      slStrength1_Pull1 = 833,
      slStrength1_Strong1 = 834,
      slStrength1_Supply1 = 835,
      slStrength1_Weak1 = 836,
      slString = 837,
      slString_blob = 838,
      slString_type = 839,
      slString_value = 840,
      slStringConst = 841,
      slStringLiteral = 842,
      slStruct_keyword = 843,
      slStruct_union = 844,
      slStruct_union_member = 845,
      slStructure_pattern_key = 846,
      slSubroutine_call = 847,
      slSubroutine_call_statement = 848,
      slSuper_dot_new = 849,
      slSuper_keyword = 850,
      slSuppress_faults_directive = 851,
      slSurelog_macro_not_defined = 852,
      slSv_file_directive = 853,
      slSv_interface = 854,
      slSv_line_directive = 855,
      slSv_package = 856,
      slSystem_task = 857,
      slSystem_task_names = 858,
      slSystem_timing_check = 859,
      slT0x_path_delay_expression = 860,
      slT0z_path_delay_expression = 861,
      slT01_path_delay_expression = 862,
      slT1x_path_delay_expression = 863,
      slT1z_path_delay_expression = 864,
      slT10_path_delay_expression = 865,
      slT_path_delay_expression = 866,
      slTagged_keyword = 867,
      slTagged_union_expression = 868,
      slTask_body_declaration = 869,
      slTask_declaration = 870,
      slTask_name_decl = 871,
      slTask_prototype = 872,
      slText_blob = 873,
      slTf_item_declaration = 874,
      slTf_port_declaration = 875,
      slTf_port_item = 876,
      slTf_port_list = 877,
      slTfall_path_delay_expression = 878,
      slTfPortDir_ConstRef = 879,
      slTfPortDir_Inout = 880,
      slTfPortDir_Inp = 881,
      slTfPortDir_Out = 882,
      slTfPortDir_Ref = 883,
      slThis = 884,
      slThis_dot_super = 885,
      slThis_keyword = 886,
      slThreshold = 887,
      slTime_literal = 888,
      slTime_unit = 889,
      slTimescale_directive = 890,
      slTimeUnitsDecl_TimePrecision = 891,
      slTimeUnitsDecl_TimePrecisionTimeUnit = 892,
      slTimeUnitsDecl_TimeUnit = 893,
      slTimeUnitsDecl_TimeUnitDiv = 894,
      slTimeUnitsDecl_TimeUnitTimePrecision = 895,
      slTiming_check_condition = 896,
      slTiming_check_event = 897,
      slTiming_check_limit = 898,
      slTimingCheckEventControl_Edge = 899,
      slTimingCheckEventControl_Negedge = 900,
      slTimingCheckEventControl_Posedge = 901,
      slTop_directives = 902,
      slTop_level_library_rule = 903,
      slTop_level_rule = 904,
      slTrans_list = 905,
      slTrans_range_list = 906,
      slTrans_set = 907,
      slTrise_path_delay_expression = 908,
      slTx0_path_delay_expression = 909,
      slTx1_path_delay_expression = 910,
      slTxz_path_delay_expression = 911,
      slType_declaration = 912,
      slType_reference = 913,
      slTz0_path_delay_expression = 914,
      slTz1_path_delay_expression = 915,
      slTz_path_delay_expression = 916,
      slTzx_path_delay_expression = 917,
      slUdp_ansi_declaration = 918,
      slUdp_body = 919,
      slUdp_declaration = 920,
      slUdp_declaration_port_list = 921,
      slUdp_initial_statement = 922,
      slUdp_input_declaration = 923,
      slUdp_instance = 924,
      slUdp_instantiation = 925,
      slUdp_nonansi_declaration = 926,
      slUdp_output_declaration = 927,
      slUdp_port_declaration = 928,
      slUdp_port_list = 929,
      slUdp_reg_declaration = 930,
      slUnary_BitwAnd = 931,
      slUnary_BitwOr = 932,
      slUnary_BitwXor = 933,
      slUnary_Minus = 934,
      slUnary_Not = 935,
      slUnary_Plus = 936,
      slUnary_ReductNand = 937,
      slUnary_ReductNor = 938,
      slUnary_ReductXnor1 = 939,
      slUnary_ReductXnor2 = 940,
      slUnary_Tilda = 941,
      slUnaryModOp_BitwAnd = 942,
      slUnaryModOp_BitwOr = 943,
      slUnaryModOp_BitwXor = 944,
      slUnaryModOp_Not = 945,
      slUnaryModOp_ReductNand = 946,
      slUnaryModOp_ReductNor = 947,
      slUnaryModOp_ReductXNor1 = 948,
      slUnaryModOp_ReductXnor2 = 949,
      slUnaryModOp_Tilda = 950,
      slUnbased_unsized_literal = 951,
      slUnconnected_drive_directive = 952,
      slUndef_directive = 953,
      slUndefineall_directive = 954,
      slUnion_keyword = 955,
      slUnique_call = 956,
      slUnique_priority = 957,
      slUniqueness_constraint = 958,
      slUnpacked_dimension = 959,
      slUnsigned_directive = 960,
      slUnsized_dimension = 961,
      slUnterminated_string = 962,
      slUse_clause = 963,
      slUse_clause_config = 964,
      slUselib_directive = 965,
      slValue_range = 966,
      slVar_data_type = 967,
      slVariable_assignment = 968,
      slVariable_decl_assignment = 969,
      slVariable_declaration = 970,
      slVariable_dimension = 971,
      slVariable_lvalue = 972,
      slVariable_port_header = 973,
      slVariable_port_type = 974,
      slVirtual_interface_declaration = 975,
      slWait_statement = 976,
      slWhile_keyword = 977,
      slX = 978,
      slXor_call = 979,
      slZ = 980,
};

#endif /* VOBJECTTYPES_H */

