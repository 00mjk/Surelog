
// This file is automatically generated by generate_parser_listener.tcl
// DO NOT EDIT

#ifndef VOBJECTTYPES_H
#define VOBJECTTYPES_H
enum VObjectType {
      sl0 = 0,
      sl1 = 1,
      slAccelerate_directive = 2,
      slACCEPT_ON = 3,
      slAction_block = 4,
      slActual_arg_expr = 5,
      slActual_arg_list = 6,
      slALWAYS = 7,
      slAlways_construct = 8,
      slAlwaysKeywd_Always = 9,
      slAlwaysKeywd_Comb = 10,
      slAlwaysKeywd_FF = 11,
      slAlwaysKeywd_Latch = 12,
      slAND = 13,
      slAnd_call = 14,
      slAnonymous_program = 15,
      slAnonymous_program_item = 16,
      slAnsi_port_declaration = 17,
      slArray_manipulation_call = 18,
      slArray_member_label = 19,
      slArray_method_name = 20,
      slArray_pattern_key = 21,
      slArray_range_expression = 22,
      slAssert_property_statement = 23,
      slAssertion_item = 24,
      slAssertion_item_declaration = 25,
      slAssertion_variable_declaration = 26,
      slAssign = 27,
      slAssignment_operator = 28,
      slAssignment_pattern = 29,
      slAssignment_pattern_expression = 30,
      slAssignment_pattern_expression_type = 31,
      slAssignment_pattern_key = 32,
      slAssignment_pattern_net_lvalue = 33,
      slAssignment_pattern_variable_lvalue = 34,
      slAssignOp_Add = 35,
      slAssignOp_ArithShiftLeft = 36,
      slAssignOp_ArithShiftRight = 37,
      slAssignOp_Assign = 38,
      slAssignOp_BitwAnd = 39,
      slAssignOp_BitwLeftShift = 40,
      slAssignOp_BitwOr = 41,
      slAssignOp_BitwRightShift = 42,
      slAssignOp_BitwXor = 43,
      slAssignOp_Div = 44,
      slAssignOp_Modulo = 45,
      slAssignOp_Mult = 46,
      slAssignOp_Sub = 47,
      slAssociative_dimension = 48,
      slAssume_property_statement = 49,
      slAttr_name = 50,
      slAttr_spec = 51,
      slAttribute_instance = 52,
      slAutoexpand_vectornets_directive = 53,
      slBegin_keywords_directive = 54,
      slBind_directive = 55,
      slBind_instantiation = 56,
      slBinModOp_BitwAnd = 57,
      slBinModOp_BitwOr = 58,
      slBinModOp_BitwXor = 59,
      slBinModOp_Equiv = 60,
      slBinModOp_LogicAnd = 61,
      slBinModOp_LogicOr = 62,
      slBinModOp_NotEqual = 63,
      slBinModOp_ReductXnor1 = 64,
      slBinModOp_ReductXnor2 = 65,
      slBinOp_ArithShiftLeft = 66,
      slBinOp_ArithShiftRight = 67,
      slBinOp_BitwAnd = 68,
      slBinOp_BitwOr = 69,
      slBinOp_BitwXor = 70,
      slBinOp_Div = 71,
      slBinOp_Equiv = 72,
      slBinOp_Equivalence = 73,
      slBinOp_FourStateLogicEqual = 74,
      slBinOp_FourStateLogicNotEqual = 75,
      slBinOp_Great = 76,
      slBinOp_GreatEqual = 77,
      slBinOp_Imply = 78,
      slBinOp_Less = 79,
      slBinOp_LessEqual = 80,
      slBinOp_LogicAnd = 81,
      slBinOp_LogicOr = 82,
      slBinOp_Minus = 83,
      slBinOp_Mult = 84,
      slBinOp_MultMult = 85,
      slBinOp_Not = 86,
      slBinOp_Percent = 87,
      slBinOp_Plus = 88,
      slBinOp_ReductNand = 89,
      slBinOp_ReductNor = 90,
      slBinOp_ReductXnor1 = 91,
      slBinOp_ReductXnor2 = 92,
      slBinOp_ShiftLeft = 93,
      slBinOp_ShiftRight = 94,
      slBinOp_WildcardEqual = 95,
      slBinOp_WildcardNotEqual = 96,
      slBinOp_WildEqual = 97,
      slBinOp_WildNotEqual = 98,
      slBins_Bins = 99,
      slBins_expression = 100,
      slBins_Ignore = 101,
      slBins_Illegal = 102,
      slBins_or_empty = 103,
      slBins_or_options = 104,
      slBins_selection = 105,
      slBins_selection_or_option = 106,
      slBit_select = 107,
      slBlock_event_expression = 108,
      slBlock_item_declaration = 109,
      slBlocking_assignment = 110,
      slBoolean_abbrev = 111,
      slBreakStmt = 112,
      slBuilt_in_method_call = 113,
      slCase = 114,
      slCase_generate_construct = 115,
      slCase_generate_item = 116,
      slCase_inside_item = 117,
      slCase_item = 118,
      slCase_keyword = 119,
      slCase_pattern_item = 120,
      slCase_statement = 121,
      slCaseX = 122,
      slCaseZ = 123,
      slCast = 124,
      slCasting_type = 125,
      slCell_clause = 126,
      slCelldefine_directive = 127,
      slChandle_type = 128,
      slCharge_strength = 129,
      slChecker = 130,
      slChecker_declaration = 131,
      slChecker_generate_item = 132,
      slChecker_instantiation = 133,
      slChecker_or_generate_item = 134,
      slChecker_or_generate_item_declaration = 135,
      slChecker_port_item = 136,
      slChecker_port_list = 137,
      slClass = 138,
      slClass_constraint = 139,
      slClass_constructor_declaration = 140,
      slClass_constructor_prototype = 141,
      slClass_declaration = 142,
      slClass_item = 143,
      slClass_keyword = 144,
      slClass_method = 145,
      slClass_new = 146,
      slClass_property = 147,
      slClass_scope = 148,
      slClass_type = 149,
      slClassItemQualifier_Local = 150,
      slClassItemQualifier_Protected = 151,
      slClassItemQualifier_Static = 152,
      slClocking_decl_assign = 153,
      slClocking_declaration = 154,
      slClocking_drive = 155,
      slClocking_event = 156,
      slClocking_item = 157,
      slClocking_skew = 158,
      slClockingDir_Inout = 159,
      slClockingDir_Input = 160,
      slClockingDir_InputOutput = 161,
      slClockingDir_Output = 162,
      slClockvar = 163,
      slClockvar_expression = 164,
      slCmos_switch_instance = 165,
      slCmosSwitchType_Cmos = 166,
      slCmosSwitchType_RCmos = 167,
      slColumnPartSelectOp = 168,
      slCombinational_body = 169,
      slCombinational_entry = 170,
      slComma_operator = 171,
      slComments = 172,
      slComplex_func_call = 173,
      slConcatenation = 174,
      slConcurrent_assertion_item = 175,
      slConcurrent_assertion_item_declaration = 176,
      slConcurrent_assertion_statement = 177,
      slCond_predicate = 178,
      slConditional_generate_construct = 179,
      slConditional_operator = 180,
      slConditional_statement = 181,
      slConfig = 182,
      slConfig_declaration = 183,
      slConfig_rule_statement = 184,
      slConsecutive_repetition = 185,
      slConst_or_range_expression = 186,
      slConst_type = 187,
      slConstant_assignment_pattern_expression = 188,
      slConstant_bit_select = 189,
      slConstant_cast = 190,
      slConstant_concatenation = 191,
      slConstant_expression = 192,
      slConstant_indexed_range = 193,
      slConstant_mintypmax_expression = 194,
      slConstant_multiple_concatenation = 195,
      slConstant_param_expression = 196,
      slConstant_part_select_range = 197,
      slConstant_primary = 198,
      slConstant_range = 199,
      slConstant_range_expression = 200,
      slConstant_select = 201,
      slConstantSelect = 202,
      slConstraint_block = 203,
      slConstraint_block_item = 204,
      slConstraint_declaration = 205,
      slConstraint_expression = 206,
      slConstraint_primary = 207,
      slConstraint_prototype = 208,
      slConstraint_set = 209,
      slConstSelect = 210,
      slContext_keyword = 211,
      slContinueStmt = 212,
      slContinuous_assign = 213,
      slControlled_timing_check_event = 214,
      slCover_cross = 215,
      slCover_point = 216,
      slCover_property_statement = 217,
      slCover_sequence_statement = 218,
      slCoverage_event = 219,
      slCoverage_option = 220,
      slCoverage_spec = 221,
      slCoverage_spec_or_option = 222,
      slCovergroup_declaration = 223,
      slCR = 224,
      slCross_body = 225,
      slCross_body_item = 226,
      slCross_item = 227,
      slCycle_delay = 228,
      slCycle_delay_const_range_expression = 229,
      slCycle_delay_range = 230,
      slData_declaration = 231,
      slData_type = 232,
      slData_type_or_implicit = 233,
      slData_type_or_void = 234,
      slDeassign = 235,
      slDecPartSelectOp = 236,
      slDefault = 237,
      slDefault_clause = 238,
      slDefault_decay_time_directive = 239,
      slDefault_nettype_directive = 240,
      slDefault_trireg_strenght_directive = 241,
      slDefault_value = 242,
      slDefaultSkew_Intput = 243,
      slDefaultSkew_IntputOutput = 244,
      slDefaultSkew_Output = 245,
      slDeferred_immediate_assert_statement = 246,
      slDeferred_immediate_assertion_item = 247,
      slDeferred_immediate_assertion_statement = 248,
      slDeferred_immediate_assume_statement = 249,
      slDeferred_immediate_cover_statement = 250,
      slDefine_directive = 251,
      slDefparam_assignment = 252,
      slDelay2 = 253,
      slDelay3 = 254,
      slDelay_control = 255,
      slDelay_mode_distributed_directive = 256,
      slDelay_mode_path_directive = 257,
      slDelay_mode_unit_directive = 258,
      slDelay_mode_zero_directive = 259,
      slDelay_or_event_control = 260,
      slDelay_value = 261,
      slDelayed_data = 262,
      slDelayed_reference = 263,
      slDescription = 264,
      slDesign_statement = 265,
      slDirective_in_macro = 266,
      slDisable_portfaults_directive = 267,
      slDisable_statement = 268,
      slDist_item = 269,
      slDist_list = 270,
      slDistWeight_AssignRange = 271,
      slDistWeight_AssignValue = 272,
      slDo = 273,
      slDollar_fullskew_timing_check = 274,
      slDollar_hold_timing_check = 275,
      slDollar_keyword = 276,
      slDollar_nochange_timing_check = 277,
      slDollar_period_timing_check = 278,
      slDollar_recovery_timing_check = 279,
      slDollar_recrem_timing_check = 280,
      slDollar_removal_timing_check = 281,
      slDollar_root_keyword = 282,
      slDollar_setup_timing_check = 283,
      slDollar_setuphold_timing_check = 284,
      slDollar_skew_timing_check = 285,
      slDollar_timeskew_timing_check = 286,
      slDollar_width_timing_check = 287,
      slDot = 288,
      slDotStar = 289,
      slDpi_import_export = 290,
      slDrive_strength = 291,
      slDynamic_array_new = 292,
      slEdge_control_specifier = 293,
      slEdge_descriptor = 294,
      slEdge_Edge = 295,
      slEdge_indicator = 296,
      slEdge_input_list = 297,
      slEdge_Negedge = 298,
      slEdge_Posedge = 299,
      slEdge_sensitive_path_declaration = 300,
      slEdge_symbol = 301,
      slElaboration_system_task = 302,
      slElse = 303,
      slElse_directive = 304,
      slElseif_directive = 305,
      slElseif_directive_in_macro_body = 306,
      slElsif_directive = 307,
      slElsif_directive_in_macro_body = 308,
      slEmpty_queue = 309,
      slEnable_gate_instance = 310,
      slEnable_portfaults_directive = 311,
      slEnableGateType_Bufif0 = 312,
      slEnableGateType_Bufif1 = 313,
      slEnableGateType_Notif0 = 314,
      slEnableGateType_Notif1 = 315,
      slEnd = 316,
      slEnd_edge_offset = 317,
      slEnd_keywords_directive = 318,
      slEndcase = 319,
      slEndcelldefine_directive = 320,
      slEndchecker = 321,
      slEndclass = 322,
      slEndclocking = 323,
      slEndconfig = 324,
      slEndfunction = 325,
      slEndgenerate = 326,
      slEndgroup = 327,
      slEndif_directive = 328,
      slEndinterface = 329,
      slEndmodule = 330,
      slEndpackage = 331,
      slEndprimitive = 332,
      slEndprogram = 333,
      slEndproperty = 334,
      slEndprotect_directive = 335,
      slEndprotected_directive = 336,
      slEndsequence = 337,
      slEndspecify = 338,
      slEndtable = 339,
      slEndtask = 340,
      slEnum_base_type = 341,
      slEnum_keyword = 342,
      slEnum_name_declaration = 343,
      slEscaped_identifier = 344,
      slEscaped_macro_definition_body = 345,
      slEscaped_macro_definition_body_alt1 = 346,
      slEscaped_macro_definition_body_alt2 = 347,
      slEscapedCR = 348,
      slEvent_based_flag = 349,
      slEvent_control = 350,
      slEvent_expression = 351,
      slEvent_trigger = 352,
      slEvent_type = 353,
      slEVENTUALLY = 354,
      slEveryRule = 355,
      slExpand_vectornets_directive = 356,
      slExpect_property_statement = 357,
      slExpression = 358,
      slExpression_or_cond_pattern = 359,
      slExpression_or_dist = 360,
      slExtern_constraint_declaration = 361,
      slExtern_qualifier = 362,
      slExtern_tf_declaration = 363,
      slFile_path_spec = 364,
      slFinal_construct = 365,
      slFor = 366,
      slFor_initialization = 367,
      slFor_step = 368,
      slFor_step_assignment = 369,
      slFor_variable_declaration = 370,
      slForce = 371,
      slForeach = 372,
      slForever = 373,
      slFull_edge_sensitive_path_description = 374,
      slFull_path_description = 375,
      slFunction_body_declaration = 376,
      slFunction_data_type = 377,
      slFunction_data_type_or_implicit = 378,
      slFunction_declaration = 379,
      slFunction_name_decl = 380,
      slFunction_prototype = 381,
      slFunction_statement_or_null = 382,
      slGate_instantiation = 383,
      slGenerate_block = 384,
      slGenerate_interface_block = 385,
      slGenerate_interface_case_statement = 386,
      slGenerate_interface_conditional_statement = 387,
      slGenerate_interface_item = 388,
      slGenerate_interface_loop_statement = 389,
      slGenerate_interface_named_block = 390,
      slGenerate_item = 391,
      slGenerate_module_block = 392,
      slGenerate_module_case_statement = 393,
      slGenerate_module_conditional_statement = 394,
      slGenerate_module_item = 395,
      slGenerate_module_loop_statement = 396,
      slGenerate_module_named_block = 397,
      slGenerate_region = 398,
      slGenerated_interface_instantiation = 399,
      slGenerated_module_instantiation = 400,
      slGenericElementType = 401,
      slGenvar_assignment = 402,
      slGenvar_decl_assignment = 403,
      slGenvar_declaration = 404,
      slGenvar_initialization = 405,
      slGenvar_interface_case_item = 406,
      slGenvar_iteration = 407,
      slGenvar_module_case_item = 408,
      slGlobal = 409,
      slGoto_repetition = 410,
      slHierarchical_btf_identifier = 411,
      slHierarchical_identifier = 412,
      slHierarchical_instance = 413,
      slHighZ0 = 414,
      slHighZ1 = 415,
      slIdentifier = 416,
      slIdentifier_in_macro_body = 417,
      slIdentifier_list = 418,
      slIF = 419,
      slIf_generate_construct = 420,
      slIfdef_directive = 421,
      slIfdef_directive_in_macro_body = 422,
      slIFF = 423,
      slIff = 424,
      slIfndef_directive = 425,
      slIfndef_directive_in_macro_body = 426,
      slImmediate_assertion_statement = 427,
      slImplicit_class_handle = 428,
      slImplicit_data_type = 429,
      slIMPLIES = 430,
      slInc_or_dec_expression = 431,
      slInc_or_dec_operator = 432,
      slIncDec_MinusMinus = 433,
      slIncDec_PlusPlus = 434,
      slInclude_directive = 435,
      slInclude_statement = 436,
      slIncPartSelectOp = 437,
      slIndexed_range = 438,
      slInitial_construct = 439,
      slInitVal_1TickB0 = 440,
      slInitVal_1Tickb0 = 441,
      slInitVal_1TickB1 = 442,
      slInitVal_1Tickb1 = 443,
      slInitVal_1TickBX = 444,
      slInitVal_1TickBx = 445,
      slInitVal_1TickbX = 446,
      slInitVal_1Tickbx = 447,
      slInitVal_Integral = 448,
      slInout_declaration = 449,
      slInput_declaration = 450,
      slInsideOp = 451,
      slInst_clause = 452,
      slInst_name = 453,
      slIntConst = 454,
      slInteger_type = 455,
      slIntegerAtomType_Byte = 456,
      slIntegerAtomType_Int = 457,
      slIntegerAtomType_LongInt = 458,
      slIntegerAtomType_Shortint = 459,
      slIntegerAtomType_Time = 460,
      slInterface = 461,
      slInterface_ansi_header = 462,
      slInterface_class_declaration = 463,
      slInterface_class_item = 464,
      slInterface_class_keyword = 465,
      slInterface_class_method = 466,
      slInterface_class_type = 467,
      slInterface_declaration = 468,
      slInterface_identifier = 469,
      slInterface_instantiation = 470,
      slInterface_item = 471,
      slInterface_nonansi_header = 472,
      slInterface_or_generate_item = 473,
      slInterface_port_declaration = 474,
      slInterface_port_header = 475,
      slIntVec_TypeBit = 476,
      slIntVec_TypeLogic = 477,
      slIntVec_TypeReg = 478,
      slJoin_any_keyword = 479,
      slJoin_keyword = 480,
      slJoin_none_keyword = 481,
      slJump_statement = 482,
      slLarge = 483,
      slLet_declaration = 484,
      slLet_formal_type = 485,
      slLet_port_item = 486,
      slLet_port_list = 487,
      slLevel_input_list = 488,
      slLevel_symbol = 489,
      slLiblist_clause = 490,
      slLibrary_declaration = 491,
      slLibrary_descriptions = 492,
      slLibrary_text = 493,
      slLifetime_Automatic = 494,
      slLifetime_Static = 495,
      slLine_directive = 496,
      slList_of_arguments = 497,
      slList_of_checker_port_connections = 498,
      slList_of_clocking_decl_assign = 499,
      slList_of_cross_items = 500,
      slList_of_defparam_assignments = 501,
      slList_of_interface_identifiers = 502,
      slList_of_net_assignments = 503,
      slList_of_net_decl_assignments = 504,
      slList_of_param_assignments = 505,
      slList_of_parameter_assignments = 506,
      slList_of_path_delay_expressions = 507,
      slList_of_path_inputs = 508,
      slList_of_path_outputs = 509,
      slList_of_port_connections = 510,
      slList_of_port_declarations = 511,
      slList_of_port_identifiers = 512,
      slList_of_ports = 513,
      slList_of_specparam_assignments = 514,
      slList_of_tf_variable_identifiers = 515,
      slList_of_type_assignments = 516,
      slList_of_variable_assignments = 517,
      slList_of_variable_decl_assignments = 518,
      slList_of_variable_identifiers = 519,
      slList_of_variable_port_identifiers = 520,
      slList_of_virtual_interface_decl = 521,
      slLocal_parameter_declaration = 522,
      slLoop_generate_construct = 523,
      slLoop_statement = 524,
      slLoop_variables = 525,
      slMacro_actual_args = 526,
      slMacro_arg = 527,
      slMacro_arguments = 528,
      slMacro_definition = 529,
      slMacroInstanceNoArgs = 530,
      slMacroInstanceWithArgs = 531,
      slMatches = 532,
      slMedium = 533,
      slMethod_call = 534,
      slMethod_call_body = 535,
      slMethod_call_root = 536,
      slMethod_prototype = 537,
      slMethodQualifier_ClassItem = 538,
      slMethodQualifier_Virtual = 539,
      slMintypmax_expression = 540,
      slModport_hierarchical_ports_declaration = 541,
      slModport_item = 542,
      slModport_ports_declaration = 543,
      slModport_simple_port = 544,
      slModport_simple_ports_declaration = 545,
      slModport_tf_port = 546,
      slModport_tf_ports_declaration = 547,
      slModule = 548,
      slModule_ansi_header = 549,
      slModule_common_item = 550,
      slModule_declaration = 551,
      slModule_instantiation = 552,
      slModule_item = 553,
      slModule_keyword = 554,
      slModule_nonansi_header = 555,
      slModule_or_generate_item = 556,
      slModule_or_generate_item_declaration = 557,
      slModule_path_concatenation = 558,
      slModule_path_expression = 559,
      slModule_path_mintypmax_expression = 560,
      slModule_path_multiple_concatenation = 561,
      slModule_path_primary = 562,
      slModuleInstance = 563,
      slMos_switch_instance = 564,
      slMosSwitchType_NMos = 565,
      slMosSwitchType_PMos = 566,
      slMosSwitchType_RNMos = 567,
      slMosSwitchType_RPMos = 568,
      slMultiline_args_macro_definition = 569,
      slMultiline_no_args_macro_definition = 570,
      slMultiple_concatenation = 571,
      slN_input_gate_instance = 572,
      slN_output_gate_instance = 573,
      slName_of_instance = 574,
      slNamed_checker_port_connection = 575,
      slNamed_parameter_assignment = 576,
      slNamed_port_connection = 577,
      slNet_alias = 578,
      slNet_assignment = 579,
      slNet_decl_assignment = 580,
      slNet_declaration = 581,
      slNet_lvalue = 582,
      slNet_port_header = 583,
      slNet_port_type = 584,
      slNet_type = 585,
      slNet_type_declaration = 586,
      slNetType_Supply0 = 587,
      slNetType_Supply1 = 588,
      slNetType_Tri = 589,
      slNetType_Tri0 = 590,
      slNetType_Tri1 = 591,
      slNetType_TriAnd = 592,
      slNetType_TriOr = 593,
      slNetType_TriReg = 594,
      slNetType_Uwire = 595,
      slNetType_Wand = 596,
      slNetType_Wire = 597,
      slNetType_Wor = 598,
      slNext_state = 599,
      slNInpGate_And = 600,
      slNInpGate_Nand = 601,
      slNInpGate_Nor = 602,
      slNInpGate_Or = 603,
      slNInpGate_Xnor = 604,
      slNInpGate_Xor = 605,
      slNoaccelerate_directive = 606,
      slNoexpand_vectornets_directive = 607,
      slNon_consecutive_repetition = 608,
      slNON_OVERLAP_IMPLY = 609,
      slNon_port_interface_item = 610,
      slNon_port_module_item = 611,
      slNon_port_program_item = 612,
      slNonblocking_assignment = 613,
      slNonBlockingTriggerEvent = 614,
      slNonIntType_Real = 615,
      slNonIntType_RealTime = 616,
      slNonIntType_ShortReal = 617,
      slNONOVERLAPPED = 618,
      slNonrange_select = 619,
      slNonrange_variable_lvalue = 620,
      slNoremove_gatenames_directive = 621,
      slNoremove_netnames_directive = 622,
      slNosuppress_faults_directive = 623,
      slNOT = 624,
      slNotifier = 625,
      slNoType = 626,
      slNounconnected_drive_directive = 627,
      slNOutGate_Buf = 628,
      slNOutGate_Not = 629,
      slNull = 630,
      slNull_keyword = 631,
      slNull_rule = 632,
      slNumber = 633,
      slNumber_1TickB0 = 634,
      slNumber_1Tickb0 = 635,
      slNumber_1TickB1 = 636,
      slNumber_1Tickb1 = 637,
      slNumber_1TickBX = 638,
      slNumber_1TickBx = 639,
      slNumber_1TickbX = 640,
      slNumber_1Tickbx = 641,
      slNumber_Integral = 642,
      slNumber_Real = 643,
      slNumber_Tick0 = 644,
      slNumber_Tick1 = 645,
      slNumber_TickB0 = 646,
      slNumber_Tickb0 = 647,
      slNumber_TickB1 = 648,
      slNumber_Tickb1 = 649,
      slOpen_range_list = 650,
      slOperator_assignment = 651,
      slOR = 652,
      slOr_call = 653,
      slOr_operator = 654,
      slOrdered_checker_port_connection = 655,
      slOrdered_parameter_assignment = 656,
      slOrdered_port_connection = 657,
      slOutput_declaration = 658,
      slOutput_symbol = 659,
      slOVERLAP_IMPLY = 660,
      slOVERLAPPED = 661,
      slOverload_declaration = 662,
      slOverload_proto_formals = 663,
      slOverloadOp_Div = 664,
      slOverloadOp_Equal = 665,
      slOverloadOp_Equiv = 666,
      slOverloadOp_Greater = 667,
      slOverloadOp_GreaterEqual = 668,
      slOverloadOp_Less = 669,
      slOverloadOp_LessEqual = 670,
      slOverloadOp_Minus = 671,
      slOverloadOp_MinusMinus = 672,
      slOverloadOp_Mult = 673,
      slOverloadOp_NotEqual = 674,
      slOverloadOp_Percent = 675,
      slOverloadOp_Plus = 676,
      slOverloadOp_PlusPlus = 677,
      slOverloadOp_StarStar = 678,
      slPackage = 679,
      slPackage_declaration = 680,
      slPackage_export_declaration = 681,
      slPackage_import_declaration = 682,
      slPackage_import_item = 683,
      slPackage_item = 684,
      slPackage_or_generate_item_declaration = 685,
      slPackage_scope = 686,
      slPacked_dimension = 687,
      slPacked_keyword = 688,
      slPaired_parens = 689,
      slPar_block = 690,
      slParallel_edge_sensitive_path_description = 691,
      slParallel_path_description = 692,
      slParam_assignment = 693,
      slParam_expression = 694,
      slParameter_declaration = 695,
      slParameter_override = 696,
      slParameter_port_declaration = 697,
      slParameter_port_list = 698,
      slParameter_value_assignment = 699,
      slPart_select_op = 700,
      slPart_select_op_column = 701,
      slPart_select_range = 702,
      slPass_enable_switch_instance = 703,
      slPass_switch_instance = 704,
      slPassEnSwitch_RTranif0 = 705,
      slPassEnSwitch_RTranif1 = 706,
      slPassEnSwitch_Tranif0 = 707,
      slPassEnSwitch_Tranif1 = 708,
      slPassSwitch_RTran = 709,
      slPassSwitch_Tran = 710,
      slPath_declaration = 711,
      slPath_delay_expression = 712,
      slPath_delay_value = 713,
      slPattern = 714,
      slPort = 715,
      slPort_declaration = 716,
      slPort_expression = 717,
      slPort_reference = 718,
      slPortDir_Inout = 719,
      slPortDir_Inp = 720,
      slPortDir_Out = 721,
      slPortDir_Ref = 722,
      slPortInst = 723,
      slPound_delay = 724,
      slPound_delay_value = 725,
      slPragma_directive = 726,
      slPragma_expression = 727,
      slPragma_value = 728,
      slPrimary = 729,
      slPrimary_literal = 730,
      slPrimitive = 731,
      slPrimitiveInstance = 732,
      slPriority = 733,
      slProcedural_assertion_statement = 734,
      slProcedural_continuous_assignment = 735,
      slProcedural_timing_control = 736,
      slProcedural_timing_control_statement = 737,
      slProduction = 738,
      slProduction_item = 739,
      slProgram = 740,
      slProgram_ansi_header = 741,
      slProgram_declaration = 742,
      slProgram_generate_item = 743,
      slProgram_instantiation = 744,
      slProgram_item = 745,
      slProgram_nonansi_header = 746,
      slProperty_actual_arg = 747,
      slProperty_case_item = 748,
      slProperty_declaration = 749,
      slProperty_expr = 750,
      slProperty_formal_type = 751,
      slProperty_instance = 752,
      slProperty_lvar_port_direction = 753,
      slProperty_port_item = 754,
      slProperty_port_list = 755,
      slProperty_spec = 756,
      slPropQualifier_ClassItem = 757,
      slPropQualifier_Rand = 758,
      slPropQualifier_Randc = 759,
      slProtect_directive = 760,
      slProtected_directive = 761,
      slPs_identifier = 762,
      slPs_or_hierarchical_array_identifier = 763,
      slPs_or_hierarchical_identifier = 764,
      slPs_or_hierarchical_sequence_identifier = 765,
      slPs_type_identifier = 766,
      slPull0 = 767,
      slPull1 = 768,
      slPull_gate_instance = 769,
      slPulldown = 770,
      slPulldown_strength = 771,
      slPullup = 772,
      slPullup_strength = 773,
      slPulse_control_specparam = 774,
      slPulsestyle_declaration = 775,
      slPure_keyword = 776,
      slPure_virtual_qualifier = 777,
      slQmark = 778,
      slQueue_dimension = 779,
      slRandcase_item = 780,
      slRandcase_statement = 781,
      slRandomize_call = 782,
      slRandomQualifier_Rand = 783,
      slRandomQualifier_RandC = 784,
      slRandsequence_statement = 785,
      slRange_expression = 786,
      slRange_list = 787,
      slRealConst = 788,
      slRef_declaration = 789,
      slReference_event = 790,
      slREJECT_ON = 791,
      slRelease = 792,
      slRemain_active_flag = 793,
      slRemove_gatename_directive = 794,
      slRemove_netname_directive = 795,
      slRepeat = 796,
      slRepeat_range = 797,
      slResetall_directive = 798,
      slRestrict_property_statement = 799,
      slReturnStmt = 800,
      slRs_case = 801,
      slRs_case_item = 802,
      slRs_code_block = 803,
      slRs_if_else = 804,
      slRs_prod = 805,
      slRs_production_list = 806,
      slRs_repeat = 807,
      slRs_rule = 808,
      slS_ALWAYS = 809,
      slS_EVENTUALLY = 810,
      slS_NEXTTIME = 811,
      slS_UNTIL = 812,
      slScalar_1TickB0 = 813,
      slScalar_1Tickb0 = 814,
      slScalar_1TickB1 = 815,
      slScalar_1Tickb1 = 816,
      slScalar_Integral = 817,
      slScalar_TickB0 = 818,
      slScalar_Tickb0 = 819,
      slScalar_TickB1 = 820,
      slScalar_Tickb1 = 821,
      slScalar_timing_check_condition = 822,
      slSelect = 823,
      slSelect_condition = 824,
      slSelect_expression = 825,
      slSeq_block = 826,
      slSeq_input_list = 827,
      slSeqFormatType_Data = 828,
      slSeqFormatType_Sequence = 829,
      slSeqFormatType_Untyped = 830,
      slSeqLvarPortDir_Inout = 831,
      slSeqLvarPortDir_Input = 832,
      slSeqLvarPortDir_Output = 833,
      slSequence_actual_arg = 834,
      slSequence_declaration = 835,
      slSequence_expr = 836,
      slSequence_instance = 837,
      slSequence_list_of_arguments = 838,
      slSequence_match_item = 839,
      slSequence_method_call = 840,
      slSequence_port_item = 841,
      slSequence_port_list = 842,
      slSequential_body = 843,
      slSequential_entry = 844,
      slShowcancelled_declaration = 845,
      slSigned_directive = 846,
      slSigning_Signed = 847,
      slSigning_Unsigned = 848,
      slSimple_args_macro_definition = 849,
      slSimple_args_macro_definition_in_macro_body = 850,
      slSimple_immediate_assert_statement = 851,
      slSimple_immediate_assertion_statement = 852,
      slSimple_immediate_assume_statement = 853,
      slSimple_immediate_cover_statement = 854,
      slSimple_macro_definition_body = 855,
      slSimple_macro_definition_body_in_macro_body = 856,
      slSimple_no_args_macro_definition = 857,
      slSimple_no_args_macro_definition_in_macro_body = 858,
      slSimple_path_declaration = 859,
      slSimple_type = 860,
      slSlice_size = 861,
      slSlline = 862,
      slSmall = 863,
      slSolve_before_list = 864,
      slSource_text = 865,
      slSpaces = 866,
      slSpecify_block = 867,
      slSpecify_input_terminal_descriptor = 868,
      slSpecify_item = 869,
      slSpecify_output_terminal_descriptor = 870,
      slSpecify_terminal_descriptor = 871,
      slSpecparam_assignment = 872,
      slSpecparam_declaration = 873,
      slStamptime_condition = 874,
      slStart_edge_offset = 875,
      slState_dependent_path_declaration = 876,
      slStatement = 877,
      slStatement_item = 878,
      slStatement_or_null = 879,
      slStream_concatenation = 880,
      slStream_expression = 881,
      slStream_operator = 882,
      slStreaming_concatenation = 883,
      slStrength0 = 884,
      slStrength1 = 885,
      slString = 886,
      slString_blob = 887,
      slString_type = 888,
      slString_value = 889,
      slStringConst = 890,
      slStringLiteral = 891,
      slSTRONG = 892,
      slStrong0 = 893,
      slStrong1 = 894,
      slStruct_keyword = 895,
      slStruct_union = 896,
      slStruct_union_member = 897,
      slStructure_pattern_key = 898,
      slSubroutine_call = 899,
      slSubroutine_call_statement = 900,
      slSuper_dot_new = 901,
      slSuper_keyword = 902,
      slSupply0 = 903,
      slSupply1 = 904,
      slSuppress_faults_directive = 905,
      slSurelog_macro_not_defined = 906,
      slSv_file_directive = 907,
      slSv_interface = 908,
      slSv_line_directive = 909,
      slSv_package = 910,
      slSYNC_ACCEPT_ON = 911,
      slSYNC_REJECT_ON = 912,
      slSystem_task = 913,
      slSystem_task_names = 914,
      slSystem_timing_check = 915,
      slT0x_path_delay_expression = 916,
      slT0z_path_delay_expression = 917,
      slT01_path_delay_expression = 918,
      slT1x_path_delay_expression = 919,
      slT1z_path_delay_expression = 920,
      slT10_path_delay_expression = 921,
      slT_path_delay_expression = 922,
      slTagged = 923,
      slTagged_keyword = 924,
      slTask_body_declaration = 925,
      slTask_declaration = 926,
      slTask_name_decl = 927,
      slTask_prototype = 928,
      slText_blob = 929,
      slTf_item_declaration = 930,
      slTf_port_declaration = 931,
      slTf_port_item = 932,
      slTf_port_list = 933,
      slTfall_path_delay_expression = 934,
      slTfPortDir_ConstRef = 935,
      slTfPortDir_Inout = 936,
      slTfPortDir_Inp = 937,
      slTfPortDir_Out = 938,
      slTfPortDir_Ref = 939,
      slThis = 940,
      slThis_dot_super = 941,
      slThis_keyword = 942,
      slThreshold = 943,
      slTime_literal = 944,
      slTime_unit = 945,
      slTimescale_directive = 946,
      slTimeUnitsDecl_TimePrecision = 947,
      slTimeUnitsDecl_TimePrecisionTimeUnit = 948,
      slTimeUnitsDecl_TimeUnit = 949,
      slTimeUnitsDecl_TimeUnitDiv = 950,
      slTimeUnitsDecl_TimeUnitTimePrecision = 951,
      slTiming_check_condition = 952,
      slTiming_check_event = 953,
      slTiming_check_limit = 954,
      slTimingCheckEventControl_Edge = 955,
      slTimingCheckEventControl_Negedge = 956,
      slTimingCheckEventControl_Posedge = 957,
      slTop_directives = 958,
      slTop_level_library_rule = 959,
      slTop_level_rule = 960,
      slTrans_list = 961,
      slTrans_range_list = 962,
      slTrans_set = 963,
      slTrise_path_delay_expression = 964,
      slTx0_path_delay_expression = 965,
      slTx1_path_delay_expression = 966,
      slTxz_path_delay_expression = 967,
      slType_declaration = 968,
      slType_reference = 969,
      slTz0_path_delay_expression = 970,
      slTz1_path_delay_expression = 971,
      slTz_path_delay_expression = 972,
      slTzx_path_delay_expression = 973,
      slUdp_ansi_declaration = 974,
      slUdp_body = 975,
      slUdp_declaration = 976,
      slUdp_declaration_port_list = 977,
      slUdp_initial_statement = 978,
      slUdp_input_declaration = 979,
      slUdp_instance = 980,
      slUdp_instantiation = 981,
      slUdp_nonansi_declaration = 982,
      slUdp_output_declaration = 983,
      slUdp_port_declaration = 984,
      slUdp_port_list = 985,
      slUdp_reg_declaration = 986,
      slUnary_BitwAnd = 987,
      slUnary_BitwOr = 988,
      slUnary_BitwXor = 989,
      slUnary_Minus = 990,
      slUnary_Not = 991,
      slUnary_Plus = 992,
      slUnary_ReductNand = 993,
      slUnary_ReductNor = 994,
      slUnary_ReductXnor1 = 995,
      slUnary_ReductXnor2 = 996,
      slUnary_Tilda = 997,
      slUnaryModOp_BitwAnd = 998,
      slUnaryModOp_BitwOr = 999,
      slUnaryModOp_BitwXor = 1000,
      slUnaryModOp_Not = 1001,
      slUnaryModOp_ReductNand = 1002,
      slUnaryModOp_ReductNor = 1003,
      slUnaryModOp_ReductXNor1 = 1004,
      slUnaryModOp_ReductXnor2 = 1005,
      slUnaryModOp_Tilda = 1006,
      slUnbased_unsized_literal = 1007,
      slUnconnected_drive_directive = 1008,
      slUndef_directive = 1009,
      slUndefineall_directive = 1010,
      slUnion_keyword = 1011,
      slUnique = 1012,
      slUnique0 = 1013,
      slUnique_call = 1014,
      slUnique_priority = 1015,
      slUniqueness_constraint = 1016,
      slUnpacked_dimension = 1017,
      slUnsigned_directive = 1018,
      slUnsized_dimension = 1019,
      slUnterminated_string = 1020,
      slUNTIL = 1021,
      slUse_clause = 1022,
      slUse_clause_config = 1023,
      slUselib_directive = 1024,
      slValue_range = 1025,
      slVar_data_type = 1026,
      slVar_type = 1027,
      slVariable_assignment = 1028,
      slVariable_decl_assignment = 1029,
      slVariable_declaration = 1030,
      slVariable_dimension = 1031,
      slVariable_lvalue = 1032,
      slVariable_port_header = 1033,
      slVariable_port_type = 1034,
      slVirtual_interface_declaration = 1035,
      slWait_statement = 1036,
      slWEAK = 1037,
      slWeak0 = 1038,
      slWeak1 = 1039,
      slWhile = 1040,
      slWith = 1041,
      slX = 1042,
      slXor_call = 1043,
      slZ = 1044,
};

#endif /* VOBJECTTYPES_H */

