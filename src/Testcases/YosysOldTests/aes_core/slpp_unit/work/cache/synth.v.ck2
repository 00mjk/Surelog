
module aes_rcon(clk, kld, out);
  wire [31:0] _000_;
  wire [3:0] _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  input clk;
  input kld;
  output [31:0] out;
  reg [3:0] rcnt;
  assign _002_ = ~rcnt[3];
  assign _003_ = rcnt[1] & rcnt[0];
  assign _004_ = _003_ & rcnt[2];
  assign _005_ = _004_ ^ _002_;
  assign _006_ = _003_ ^ rcnt[2];
  assign _007_ = _003_ & _006_;
  assign _008_ = _007_ & _005_;
  assign _009_ = ~rcnt[0];
  assign _010_ = ~rcnt[1];
  assign _011_ = _010_ & _009_;
  assign _012_ = _011_ & _006_;
  assign _013_ = _012_ & _005_;
  assign _014_ = _013_ | _008_;
  assign _015_ = _010_ & rcnt[0];
  assign _016_ = _015_ & _006_;
  assign _017_ = _016_ & _005_;
  assign _018_ = rcnt[1] & _009_;
  assign _019_ = _018_ & _006_;
  assign _020_ = _019_ & _005_;
  assign _021_ = _020_ | _017_;
  assign _022_ = _021_ | _014_;
  assign _023_ = _004_ ^ rcnt[3];
  assign _024_ = ~rcnt[2];
  assign _025_ = _003_ ^ _024_;
  assign _026_ = _004_ & _023_;
  assign _027_ = _011_ & _025_;
  assign _028_ = _027_ & _023_;
  assign _029_ = _028_ | _026_;
  assign _030_ = _004_ & _005_;
  assign _031_ = _027_ & _005_;
  assign _032_ = _031_ | _030_;
  assign _033_ = _015_ & _025_;
  assign _034_ = _033_ & _005_;
  assign _035_ = _018_ & _025_;
  assign _036_ = _035_ & _005_;
  assign _037_ = _036_ | _034_;
  assign _038_ = _037_ | _032_;
  assign _039_ = _038_ | _029_;
  assign _040_ = _039_ | _022_;
  assign _041_ = ~kld;
  assign _042_ = _004_ & _041_;
  assign _000_[24] = _042_ | kld;
  assign _043_ = _031_ | _029_;
  assign _044_ = _043_ & _041_;
  assign _000_[25] = _044_ & _040_;
  assign _045_ = _005_ ? _033_ : _027_;
  assign _046_ = _045_ & _041_;
  assign _000_[26] = _046_ & _040_;
  assign _047_ = _023_ ? _004_ : _035_;
  assign _048_ = _047_ & _041_;
  assign _000_[27] = _048_ & _040_;
  assign _049_ = _029_ | _008_;
  assign _050_ = _049_ & _041_;
  assign _000_[28] = _050_ & _040_;
  assign _051_ = _005_ ? _012_ : _027_;
  assign _052_ = _051_ & _041_;
  assign _000_[29] = _052_ & _040_;
  assign _053_ = _017_ & _041_;
  assign _000_[30] = _053_ & _040_;
  assign _054_ = _020_ & _041_;
  assign _000_[31] = _054_ & _040_;
  assign _001_[0] = _041_ & _009_;
  assign _055_ = rcnt[1] ^ rcnt[0];
  assign _001_[1] = _055_ & _041_;
  assign _001_[2] = _006_ & _041_;
  assign _001_[3] = _023_ & _041_;
  reg #~@out_reg[24]#~@;
  always @(posedge clk)
      #~@out_reg[24] #~@<= _000_[24];
  assign out[24] = #~@out_reg[24]#~@;
  reg #~@out_reg[25]#~@;
  always @(posedge clk)
      #~@out_reg[25] #~@<= _000_[25];
  assign out[25] = #~@out_reg[25]#~@;
  reg #~@out_reg[26]#~@;
  always @(posedge clk)
      #~@out_reg[26] #~@<= _000_[26];
  assign out[26] = #~@out_reg[26]#~@;
  reg #~@out_reg[27]#~@;
  always @(posedge clk)
      #~@out_reg[27] #~@<= _000_[27];
  assign out[27] = #~@out_reg[27]#~@;
  reg #~@out_reg[28]#~@;
  always @(posedge clk)
      #~@out_reg[28] #~@<= _000_[28];
  assign out[28] = #~@out_reg[28]#~@;
  reg #~@out_reg[29]#~@;
  always @(posedge clk)
      #~@out_reg[29] #~@<= _000_[29];
  assign out[29] = #~@out_reg[29]#~@;
  reg #~@out_reg[30]#~@;
  always @(posedge clk)
      #~@out_reg[30] #~@<= _000_[30];
  assign out[30] = #~@out_reg[30]#~@;
  reg #~@out_reg[31]#~@;
  always @(posedge clk)
      #~@out_reg[31] #~@<= _000_[31];
  assign out[31] = #~@out_reg[31]#~@;
  always @(posedge clk)
      rcnt[0] <= _001_[0];
  always @(posedge clk)
      rcnt[1] <= _001_[1];
  always @(posedge clk)
      rcnt[2] <= _001_[2];
  always @(posedge clk)
      rcnt[3] <= _001_[3];
  assign out[23:0] = 24'b000000000000000000000000;
endmodule