std::vector<std::string> slapi_scripts = {
"import slapi\n"
"def SLsetWaiver(messageId, fileName=None, line=0, objectName=None):\n"
"    return slapi.SLsetWaiver(messageId, fileName, line, objectName)\n"
"\n"
"def SLoverrideSeverity(messageId, severity):\n"
"    return slapi.SLoverrideSeverity(messageId, severity)\n"
"\n"
"def SLregisterNewErrorType(messageId, text, secondLine):\n"
"    return slapi.SLregisterNewErrorType(messageId, text, secondLine)\n"
"\n"
"def SLaddError(container, messageId, fileName, line, col, objectName):\n"
"    return slapi.SLaddError(container, messageId, fileName, line, col, objectName)\n"
"\n"
"def SLaddErrorContext(prog, context, messageId, objectName, printColumn=False):\n"
"    return slapi.SLaddErrorContext(prog, context, messageId, objectName, printColumn)\n"
"\n"
"def SLaddMLErrorContext(prog, context1, context2, messageId, objectName1, objectName2, printColumn=False):\n"
"    return slapi.SLaddMLErrorContext(prog, context1, context2, messageId, objectName1, objectName2, printColumn)\n"
"\n"
"def SLaddMLError(container, messageId, fileName1, line1, col1, objectName1, fileName2, line2, col2, objectName2):\n"
"    return slapi.SLaddMLError(container, messageId, fileName1, line1, col1, objectName1, fileName2, line2, col2, objectName2)\n"
"\n"
"def SLgetColumn(prog, context):\n"
"    return slapi.SLgetColumn(prog, context)\n"
"\n"
"def SLgetText(prog, context):\n"
"    return slapi.SLgetText(prog, context)\n"
"\n"
"def SLgetTokens(prog, context):\n"
"    return slapi.SLgetTokens(prog, context)\n"
"\n"
"def SLgetParentContext(prog, context):\n"
"    return slapi.SLgetParentContext(prog, context)\n"
"\n"
"def SLgetChildrenContext(prog, context):\n"
"    return slapi.SLgetChildrenContext(prog, context)\n"
"\n"
"def SLgetRootNode(fC):\n"
"    return slapi.SLgetRootNode(fC)\n"
"\n"
"def SLgetFile(*args):\n"
"    return slapi.SLgetFile(*args)\n"
"\n"
"def SLgetSibling(fC, index):\n"
"    return slapi.SLgetSibling(fC, index)\n"
"\n"
"def SLgetLine(*args):\n"
"    return slapi.SLgetLine(*args)\n"
"\n"
"def SLgetName(fC, index):\n"
"    return slapi.SLgetName(fC, index)\n"
"\n"
"def SLgetType(fC, index):\n"
"    return slapi.SLgetType(fC, index)\n"
"\n"
"def SLgetChild(*args):\n"
"    return slapi.SLgetChild(*args)\n"
"\n"
"def SLgetParent(*args):\n"
"    return slapi.SLgetParent(*args)\n"
"\n"
"def SLgetAll(*args):\n"
"    return slapi.SLgetAll(*args)\n"
"\n"
"def SLcollect(fC, parent, type):\n"
"    return slapi.SLcollect(fC, parent, type)\n"
"\n"
"def SLcollectAll(*args):\n"
"    return slapi.SLcollectAll(*args)\n"
"\n"
"def SLgetnModuleDefinition(design):\n"
"    return slapi.SLgetnModuleDefinition(design)\n"
"\n"
"def SLgetnProgramDefinition(design):\n"
"    return slapi.SLgetnProgramDefinition(design)\n"
"\n"
"def SLgetnPackageDefinition(design):\n"
"    return slapi.SLgetnPackageDefinition(design)\n"
"\n"
"def SLgetnClassDefinition(design):\n"
"    return slapi.SLgetnClassDefinition(design)\n"
"\n"
"def SLgetnTopModuleInstance(design):\n"
"    return slapi.SLgetnTopModuleInstance(design)\n"
"\n"
"def SLgetModuleDefinition(design, index):\n"
"    return slapi.SLgetModuleDefinition(design, index)\n"
"\n"
"def SLgetProgramDefinition(design, index):\n"
"    return slapi.SLgetProgramDefinition(design, index)\n"
"\n"
"def SLgetPackageDefinition(design, index):\n"
"    return slapi.SLgetPackageDefinition(design, index)\n"
"\n"
"def SLgetClassDefinition(design, index):\n"
"    return slapi.SLgetClassDefinition(design, index)\n"
"\n"
"def SLgetTopModuleInstance(design, index):\n"
"    return slapi.SLgetTopModuleInstance(design, index)\n"
"\n"
"def SLgetModuleName(module):\n"
"    return slapi.SLgetModuleName(module)\n"
"\n"
"def SLgetModuleFile(module):\n"
"    return slapi.SLgetModuleFile(module)\n"
"\n"
"def SLgetModuleType(module):\n"
"    return slapi.SLgetModuleType(module)\n"
"\n"
"def SLgetModuleLine(module):\n"
"    return slapi.SLgetModuleLine(module)\n"
"\n"
"def SLgetModuleFileContent(module):\n"
"    return slapi.SLgetModuleFileContent(module)\n"
"\n"
"def SLgetModuleRootNode(module):\n"
"    return slapi.SLgetModuleRootNode(module)\n"
"\n"
"def SLgetClassName(_def):\n"
"    return slapi.SLgetClassName(_def)\n"
"\n"
"def SLgetClassFile(_def):\n"
"    return slapi.SLgetClassFile(_def)\n"
"\n"
"def SLgetClassType(_def):\n"
"    return slapi.SLgetClassType(_def)\n"
"\n"
"def SLgetClassLine(_def):\n"
"    return slapi.SLgetClassLine(_def)\n"
"\n"
"def SLgetClassFileContent(_def):\n"
"    return slapi.SLgetClassFileContent(_def)\n"
"\n"
"def SLgetClassRootNode(_def):\n"
"    return slapi.SLgetClassRootNode(_def)\n"
"\n"
"def SLgetPackageName(_def):\n"
"    return slapi.SLgetPackageName(_def)\n"
"\n"
"def SLgetPackageFile(_def):\n"
"    return slapi.SLgetPackageFile(_def)\n"
"\n"
"def SLgetPackageType(_def):\n"
"    return slapi.SLgetPackageType(_def)\n"
"\n"
"def SLgetPackageLine(_def):\n"
"    return slapi.SLgetPackageLine(_def)\n"
"\n"
"def SLgetPackageFileContent(_def):\n"
"    return slapi.SLgetPackageFileContent(_def)\n"
"\n"
"def SLgetPackageRootNode(_def):\n"
"    return slapi.SLgetPackageRootNode(_def)\n"
"\n"
"def SLgetProgramName(_def):\n"
"    return slapi.SLgetProgramName(_def)\n"
"\n"
"def SLgetProgramFile(_def):\n"
"    return slapi.SLgetProgramFile(_def)\n"
"\n"
"def SLgetProgramType(_def):\n"
"    return slapi.SLgetProgramType(_def)\n"
"\n"
"def SLgetProgramLine(_def):\n"
"    return slapi.SLgetProgramLine(_def)\n"
"\n"
"def SLgetProgramFileContent(_def):\n"
"    return slapi.SLgetProgramFileContent(_def)\n"
"\n"
"def SLgetProgramRootNode(_def):\n"
"    return slapi.SLgetProgramRootNode(_def)\n"
"\n"
"def SLgetInstanceType(instance):\n"
"    return slapi.SLgetInstanceType(instance)\n"
"\n"
"def SLgetInstanceModuleType(instance):\n"
"    return slapi.SLgetInstanceModuleType(instance)\n"
"\n"
"def SLgetInstanceName(instance):\n"
"    return slapi.SLgetInstanceName(instance)\n"
"\n"
"def SLgetInstanceFullPathName(instance):\n"
"    return slapi.SLgetInstanceFullPathName(instance)\n"
"\n"
"def SLgetInstanceModuleName(instance):\n"
"    return slapi.SLgetInstanceModuleName(instance)\n"
"\n"
"def SLgetInstanceDefinition(instance):\n"
"    return slapi.SLgetInstanceDefinition(instance)\n"
"\n"
"def SLgetInstanceFileName(instance):\n"
"    return slapi.SLgetInstanceFileName(instance)\n"
"\n"
"def SLgetInstanceFileContent(instance):\n"
"    return slapi.SLgetInstanceFileContent(instance)\n"
"\n"
"def SLgetInstanceNodeId(instance):\n"
"    return slapi.SLgetInstanceNodeId(instance)\n"
"\n"
"def SLgetInstanceLine(instance):\n"
"    return slapi.SLgetInstanceLine(instance)\n"
"\n"
"def SLgetnInstanceChildren(instance):\n"
"    return slapi.SLgetnInstanceChildren(instance)\n"
"\n"
"def SLgetInstanceChildren(instance, i):\n"
"    return slapi.SLgetInstanceChildren(instance, i)\n"
"\n"
"def SLgetInstanceParent(instance):\n"
"    return slapi.SLgetInstanceParent(instance)\n"
"\n"
"\n"
"\n"
"# SURELOG ERROR FORMATTING\n"
"\n"
"def SLformatMsg (severity, category, messageId, location, text):\n"
"    chunks = []\n"
"    chunks.append(\"[\")\n"
"    chunks.append(severity)\n"
"    chunks.append(\":\")\n"
"    chunks.append(category)\n"
"    chunks.append(messageId)\n"
"    chunks.append(\"] \")\n"
"    chunks.append(location)\n"
"    chunks.append(text)\n"
"    chunks.append(\"\\n\\n\")\n"
"    result = ''.join(chunks)\n"
"    return result\n"
"\n"
};
